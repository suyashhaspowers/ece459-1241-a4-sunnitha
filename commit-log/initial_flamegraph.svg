<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="357"><g><title>[unknown] (2 samples, 0.56%)</title><rect x="0.0000%" y="789" width="0.5602%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="773" width="0.2801%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.5301%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="757" width="0.2801%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.5301%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="741" width="0.2801%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.5301%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="725" width="0.2801%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.5301%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="709" width="0.2801%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.5301%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="693" width="0.2801%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.5301%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="677" width="0.2801%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.5301%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="661" width="0.2801%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.5301%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="645" width="0.2801%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.5301%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="629" width="0.2801%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.5301%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="0.2801%" y="613" width="0.2801%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.5301%" y="623.50"></text></g><g><title>[unknown] (39 samples, 10.92%)</title><rect x="7.8431%" y="773" width="10.9244%" height="15" fill="rgb(216,20,37)" fg:x="28" fg:w="39"/><text x="8.0931%" y="783.50">[unknown]</text></g><g><title>[unknown] (39 samples, 10.92%)</title><rect x="7.8431%" y="757" width="10.9244%" height="15" fill="rgb(206,188,39)" fg:x="28" fg:w="39"/><text x="8.0931%" y="767.50">[unknown]</text></g><g><title>[unknown] (39 samples, 10.92%)</title><rect x="7.8431%" y="741" width="10.9244%" height="15" fill="rgb(217,207,13)" fg:x="28" fg:w="39"/><text x="8.0931%" y="751.50">[unknown]</text></g><g><title>[unknown] (39 samples, 10.92%)</title><rect x="7.8431%" y="725" width="10.9244%" height="15" fill="rgb(231,73,38)" fg:x="28" fg:w="39"/><text x="8.0931%" y="735.50">[unknown]</text></g><g><title>[unknown] (34 samples, 9.52%)</title><rect x="9.2437%" y="709" width="9.5238%" height="15" fill="rgb(225,20,46)" fg:x="33" fg:w="34"/><text x="9.4937%" y="719.50">[unknown]</text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="18.7675%" y="757" width="1.4006%" height="15" fill="rgb(210,31,41)" fg:x="67" fg:w="5"/><text x="19.0175%" y="767.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="18.7675%" y="741" width="1.4006%" height="15" fill="rgb(221,200,47)" fg:x="67" fg:w="5"/><text x="19.0175%" y="751.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="18.7675%" y="725" width="1.4006%" height="15" fill="rgb(226,26,5)" fg:x="67" fg:w="5"/><text x="19.0175%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="18.7675%" y="709" width="1.4006%" height="15" fill="rgb(249,33,26)" fg:x="67" fg:w="5"/><text x="19.0175%" y="719.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="725" width="1.4006%" height="15" fill="rgb(235,183,28)" fg:x="72" fg:w="5"/><text x="20.4181%" y="735.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="709" width="1.4006%" height="15" fill="rgb(221,5,38)" fg:x="72" fg:w="5"/><text x="20.4181%" y="719.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="693" width="1.4006%" height="15" fill="rgb(247,18,42)" fg:x="72" fg:w="5"/><text x="20.4181%" y="703.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="677" width="1.4006%" height="15" fill="rgb(241,131,45)" fg:x="72" fg:w="5"/><text x="20.4181%" y="687.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="661" width="1.4006%" height="15" fill="rgb(249,31,29)" fg:x="72" fg:w="5"/><text x="20.4181%" y="671.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="645" width="1.4006%" height="15" fill="rgb(225,111,53)" fg:x="72" fg:w="5"/><text x="20.4181%" y="655.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="629" width="1.4006%" height="15" fill="rgb(238,160,17)" fg:x="72" fg:w="5"/><text x="20.4181%" y="639.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="613" width="1.4006%" height="15" fill="rgb(214,148,48)" fg:x="72" fg:w="5"/><text x="20.4181%" y="623.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="597" width="1.4006%" height="15" fill="rgb(232,36,49)" fg:x="72" fg:w="5"/><text x="20.4181%" y="607.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="581" width="1.4006%" height="15" fill="rgb(209,103,24)" fg:x="72" fg:w="5"/><text x="20.4181%" y="591.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="565" width="1.4006%" height="15" fill="rgb(229,88,8)" fg:x="72" fg:w="5"/><text x="20.4181%" y="575.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="549" width="1.4006%" height="15" fill="rgb(213,181,19)" fg:x="72" fg:w="5"/><text x="20.4181%" y="559.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="533" width="1.4006%" height="15" fill="rgb(254,191,54)" fg:x="72" fg:w="5"/><text x="20.4181%" y="543.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="517" width="1.4006%" height="15" fill="rgb(241,83,37)" fg:x="72" fg:w="5"/><text x="20.4181%" y="527.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="501" width="1.4006%" height="15" fill="rgb(233,36,39)" fg:x="72" fg:w="5"/><text x="20.4181%" y="511.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="485" width="1.4006%" height="15" fill="rgb(226,3,54)" fg:x="72" fg:w="5"/><text x="20.4181%" y="495.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="20.1681%" y="469" width="1.4006%" height="15" fill="rgb(245,192,40)" fg:x="72" fg:w="5"/><text x="20.4181%" y="479.50"></text></g><g><title>__GI___call_tls_dtors (6 samples, 1.68%)</title><rect x="20.1681%" y="757" width="1.6807%" height="15" fill="rgb(238,167,29)" fg:x="72" fg:w="6"/><text x="20.4181%" y="767.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit::destroy (6 samples, 1.68%)</title><rect x="20.1681%" y="741" width="1.6807%" height="15" fill="rgb(232,182,51)" fg:x="72" fg:w="6"/><text x="20.4181%" y="751.50"></text></g><g><title>std::sys::common::thread_local::abort_on_dtor_unwind (1 samples, 0.28%)</title><rect x="21.5686%" y="725" width="0.2801%" height="15" fill="rgb(231,60,39)" fg:x="77" fg:w="1"/><text x="21.8186%" y="735.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit::destroy::{{closure}} (1 samples, 0.28%)</title><rect x="21.5686%" y="709" width="0.2801%" height="15" fill="rgb(208,69,12)" fg:x="77" fg:w="1"/><text x="21.8186%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::thread_info::ThreadInfo&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="693" width="0.2801%" height="15" fill="rgb(235,93,37)" fg:x="77" fg:w="1"/><text x="21.8186%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::once::OnceCell&lt;std::thread::Thread&gt;&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="677" width="0.2801%" height="15" fill="rgb(213,116,39)" fg:x="77" fg:w="1"/><text x="21.8186%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;std::thread::Thread&gt;&gt;&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="661" width="0.2801%" height="15" fill="rgb(222,207,29)" fg:x="77" fg:w="1"/><text x="21.8186%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::thread::Thread&gt;&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="645" width="0.2801%" height="15" fill="rgb(206,96,30)" fg:x="77" fg:w="1"/><text x="21.8186%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="629" width="0.2801%" height="15" fill="rgb(218,138,4)" fg:x="77" fg:w="1"/><text x="21.8186%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="613" width="0.2801%" height="15" fill="rgb(250,191,14)" fg:x="77" fg:w="1"/><text x="21.8186%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (1 samples, 0.28%)</title><rect x="21.5686%" y="597" width="0.2801%" height="15" fill="rgb(239,60,40)" fg:x="77" fg:w="1"/><text x="21.8186%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="21.5686%" y="581" width="0.2801%" height="15" fill="rgb(206,27,48)" fg:x="77" fg:w="1"/><text x="21.8186%" y="591.50"></text></g><g><title>__GI___ctype_init (5 samples, 1.40%)</title><rect x="21.8487%" y="757" width="1.4006%" height="15" fill="rgb(225,35,8)" fg:x="78" fg:w="5"/><text x="22.0987%" y="767.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.28%)</title><rect x="23.2493%" y="757" width="0.2801%" height="15" fill="rgb(250,213,24)" fg:x="83" fg:w="1"/><text x="23.4993%" y="767.50"></text></g><g><title>_dl_fixup (1 samples, 0.28%)</title><rect x="23.2493%" y="741" width="0.2801%" height="15" fill="rgb(247,123,22)" fg:x="83" fg:w="1"/><text x="23.4993%" y="751.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 0.84%)</title><rect x="23.5294%" y="549" width="0.8403%" height="15" fill="rgb(231,138,38)" fg:x="84" fg:w="3"/><text x="23.7794%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (3 samples, 0.84%)</title><rect x="23.5294%" y="533" width="0.8403%" height="15" fill="rgb(231,145,46)" fg:x="84" fg:w="3"/><text x="23.7794%" y="543.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (3 samples, 0.84%)</title><rect x="23.5294%" y="517" width="0.8403%" height="15" fill="rgb(251,118,11)" fg:x="84" fg:w="3"/><text x="23.7794%" y="527.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (3 samples, 0.84%)</title><rect x="23.5294%" y="501" width="0.8403%" height="15" fill="rgb(217,147,25)" fg:x="84" fg:w="3"/><text x="23.7794%" y="511.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (3 samples, 0.84%)</title><rect x="23.5294%" y="485" width="0.8403%" height="15" fill="rgb(247,81,37)" fg:x="84" fg:w="3"/><text x="23.7794%" y="495.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (3 samples, 0.84%)</title><rect x="23.5294%" y="469" width="0.8403%" height="15" fill="rgb(209,12,38)" fg:x="84" fg:w="3"/><text x="23.7794%" y="479.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.84%)</title><rect x="23.5294%" y="453" width="0.8403%" height="15" fill="rgb(227,1,9)" fg:x="84" fg:w="3"/><text x="23.7794%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="23.5294%" y="437" width="0.8403%" height="15" fill="rgb(248,47,43)" fg:x="84" fg:w="3"/><text x="23.7794%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="23.8095%" y="421" width="0.5602%" height="15" fill="rgb(221,10,30)" fg:x="85" fg:w="2"/><text x="24.0595%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="23.8095%" y="405" width="0.5602%" height="15" fill="rgb(210,229,1)" fg:x="85" fg:w="2"/><text x="24.0595%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="23.8095%" y="389" width="0.5602%" height="15" fill="rgb(222,148,37)" fg:x="85" fg:w="2"/><text x="24.0595%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="23.8095%" y="373" width="0.5602%" height="15" fill="rgb(234,67,33)" fg:x="85" fg:w="2"/><text x="24.0595%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="23.8095%" y="357" width="0.5602%" height="15" fill="rgb(247,98,35)" fg:x="85" fg:w="2"/><text x="24.0595%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.0896%" y="341" width="0.2801%" height="15" fill="rgb(247,138,52)" fg:x="86" fg:w="1"/><text x="24.3396%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.0896%" y="325" width="0.2801%" height="15" fill="rgb(213,79,30)" fg:x="86" fg:w="1"/><text x="24.3396%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.0896%" y="309" width="0.2801%" height="15" fill="rgb(246,177,23)" fg:x="86" fg:w="1"/><text x="24.3396%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.0896%" y="293" width="0.2801%" height="15" fill="rgb(230,62,27)" fg:x="86" fg:w="1"/><text x="24.3396%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="24.3697%" y="437" width="0.2801%" height="15" fill="rgb(216,154,8)" fg:x="87" fg:w="1"/><text x="24.6197%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="24.3697%" y="421" width="0.2801%" height="15" fill="rgb(244,35,45)" fg:x="87" fg:w="1"/><text x="24.6197%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.28%)</title><rect x="24.3697%" y="405" width="0.2801%" height="15" fill="rgb(251,115,12)" fg:x="87" fg:w="1"/><text x="24.6197%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.28%)</title><rect x="24.3697%" y="389" width="0.2801%" height="15" fill="rgb(240,54,50)" fg:x="87" fg:w="1"/><text x="24.6197%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="24.3697%" y="373" width="0.2801%" height="15" fill="rgb(233,84,52)" fg:x="87" fg:w="1"/><text x="24.6197%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.28%)</title><rect x="24.3697%" y="357" width="0.2801%" height="15" fill="rgb(207,117,47)" fg:x="87" fg:w="1"/><text x="24.6197%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.28%)</title><rect x="24.3697%" y="341" width="0.2801%" height="15" fill="rgb(249,43,39)" fg:x="87" fg:w="1"/><text x="24.6197%" y="351.50"></text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name::{{closure}}::{{closure}} (1 samples, 0.28%)</title><rect x="24.3697%" y="325" width="0.2801%" height="15" fill="rgb(209,38,44)" fg:x="87" fg:w="1"/><text x="24.6197%" y="335.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.28%)</title><rect x="24.3697%" y="309" width="0.2801%" height="15" fill="rgb(236,212,23)" fg:x="87" fg:w="1"/><text x="24.6197%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.28%)</title><rect x="24.3697%" y="293" width="0.2801%" height="15" fill="rgb(242,79,21)" fg:x="87" fg:w="1"/><text x="24.6197%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.28%)</title><rect x="24.3697%" y="277" width="0.2801%" height="15" fill="rgb(211,96,35)" fg:x="87" fg:w="1"/><text x="24.6197%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.28%)</title><rect x="24.3697%" y="261" width="0.2801%" height="15" fill="rgb(253,215,40)" fg:x="87" fg:w="1"/><text x="24.6197%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.28%)</title><rect x="24.3697%" y="245" width="0.2801%" height="15" fill="rgb(211,81,21)" fg:x="87" fg:w="1"/><text x="24.6197%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.28%)</title><rect x="24.3697%" y="229" width="0.2801%" height="15" fill="rgb(208,190,38)" fg:x="87" fg:w="1"/><text x="24.6197%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="24.3697%" y="213" width="0.2801%" height="15" fill="rgb(235,213,38)" fg:x="87" fg:w="1"/><text x="24.6197%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="24.3697%" y="197" width="0.2801%" height="15" fill="rgb(237,122,38)" fg:x="87" fg:w="1"/><text x="24.6197%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="24.3697%" y="181" width="0.2801%" height="15" fill="rgb(244,218,35)" fg:x="87" fg:w="1"/><text x="24.6197%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="24.3697%" y="165" width="0.2801%" height="15" fill="rgb(240,68,47)" fg:x="87" fg:w="1"/><text x="24.6197%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="24.3697%" y="149" width="0.2801%" height="15" fill="rgb(210,16,53)" fg:x="87" fg:w="1"/><text x="24.6197%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="24.3697%" y="133" width="0.2801%" height="15" fill="rgb(235,124,12)" fg:x="87" fg:w="1"/><text x="24.6197%" y="143.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.28%)</title><rect x="24.3697%" y="117" width="0.2801%" height="15" fill="rgb(224,169,11)" fg:x="87" fg:w="1"/><text x="24.6197%" y="127.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="24.3697%" y="101" width="0.2801%" height="15" fill="rgb(250,166,2)" fg:x="87" fg:w="1"/><text x="24.6197%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="24.6499%" y="437" width="0.2801%" height="15" fill="rgb(242,216,29)" fg:x="88" fg:w="1"/><text x="24.8999%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="24.6499%" y="421" width="0.2801%" height="15" fill="rgb(230,116,27)" fg:x="88" fg:w="1"/><text x="24.8999%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.28%)</title><rect x="24.6499%" y="405" width="0.2801%" height="15" fill="rgb(228,99,48)" fg:x="88" fg:w="1"/><text x="24.8999%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.28%)</title><rect x="24.6499%" y="389" width="0.2801%" height="15" fill="rgb(253,11,6)" fg:x="88" fg:w="1"/><text x="24.8999%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.28%)</title><rect x="24.6499%" y="373" width="0.2801%" height="15" fill="rgb(247,143,39)" fg:x="88" fg:w="1"/><text x="24.8999%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.28%)</title><rect x="24.6499%" y="357" width="0.2801%" height="15" fill="rgb(236,97,10)" fg:x="88" fg:w="1"/><text x="24.8999%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.28%)</title><rect x="24.6499%" y="341" width="0.2801%" height="15" fill="rgb(233,208,19)" fg:x="88" fg:w="1"/><text x="24.8999%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.28%)</title><rect x="24.6499%" y="325" width="0.2801%" height="15" fill="rgb(216,164,2)" fg:x="88" fg:w="1"/><text x="24.8999%" y="335.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.28%)</title><rect x="24.6499%" y="309" width="0.2801%" height="15" fill="rgb(220,129,5)" fg:x="88" fg:w="1"/><text x="24.8999%" y="319.50"></text></g><g><title>_int_realloc (1 samples, 0.28%)</title><rect x="24.6499%" y="293" width="0.2801%" height="15" fill="rgb(242,17,10)" fg:x="88" fg:w="1"/><text x="24.8999%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.28%)</title><rect x="24.6499%" y="277" width="0.2801%" height="15" fill="rgb(242,107,0)" fg:x="88" fg:w="1"/><text x="24.8999%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.84%)</title><rect x="24.3697%" y="533" width="0.8403%" height="15" fill="rgb(251,28,31)" fg:x="87" fg:w="3"/><text x="24.6197%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.84%)</title><rect x="24.3697%" y="517" width="0.8403%" height="15" fill="rgb(233,223,10)" fg:x="87" fg:w="3"/><text x="24.6197%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.84%)</title><rect x="24.3697%" y="501" width="0.8403%" height="15" fill="rgb(215,21,27)" fg:x="87" fg:w="3"/><text x="24.6197%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.84%)</title><rect x="24.3697%" y="485" width="0.8403%" height="15" fill="rgb(232,23,21)" fg:x="87" fg:w="3"/><text x="24.6197%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.84%)</title><rect x="24.3697%" y="469" width="0.8403%" height="15" fill="rgb(244,5,23)" fg:x="87" fg:w="3"/><text x="24.6197%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.84%)</title><rect x="24.3697%" y="453" width="0.8403%" height="15" fill="rgb(226,81,46)" fg:x="87" fg:w="3"/><text x="24.6197%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.28%)</title><rect x="24.9300%" y="437" width="0.2801%" height="15" fill="rgb(247,70,30)" fg:x="89" fg:w="1"/><text x="25.1800%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.9300%" y="421" width="0.2801%" height="15" fill="rgb(212,68,19)" fg:x="89" fg:w="1"/><text x="25.1800%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.9300%" y="405" width="0.2801%" height="15" fill="rgb(240,187,13)" fg:x="89" fg:w="1"/><text x="25.1800%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.9300%" y="389" width="0.2801%" height="15" fill="rgb(223,113,26)" fg:x="89" fg:w="1"/><text x="25.1800%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.9300%" y="373" width="0.2801%" height="15" fill="rgb(206,192,2)" fg:x="89" fg:w="1"/><text x="25.1800%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="24.9300%" y="357" width="0.2801%" height="15" fill="rgb(241,108,4)" fg:x="89" fg:w="1"/><text x="25.1800%" y="367.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (7 samples, 1.96%)</title><rect x="23.5294%" y="565" width="1.9608%" height="15" fill="rgb(247,173,49)" fg:x="84" fg:w="7"/><text x="23.7794%" y="575.50">l..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (4 samples, 1.12%)</title><rect x="24.3697%" y="549" width="1.1204%" height="15" fill="rgb(224,114,35)" fg:x="87" fg:w="4"/><text x="24.6197%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="533" width="0.2801%" height="15" fill="rgb(245,159,27)" fg:x="90" fg:w="1"/><text x="25.4601%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="25.2101%" y="517" width="0.2801%" height="15" fill="rgb(245,172,44)" fg:x="90" fg:w="1"/><text x="25.4601%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="501" width="0.2801%" height="15" fill="rgb(236,23,11)" fg:x="90" fg:w="1"/><text x="25.4601%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="485" width="0.2801%" height="15" fill="rgb(205,117,38)" fg:x="90" fg:w="1"/><text x="25.4601%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="469" width="0.2801%" height="15" fill="rgb(237,72,25)" fg:x="90" fg:w="1"/><text x="25.4601%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="453" width="0.2801%" height="15" fill="rgb(244,70,9)" fg:x="90" fg:w="1"/><text x="25.4601%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.28%)</title><rect x="25.2101%" y="437" width="0.2801%" height="15" fill="rgb(217,125,39)" fg:x="90" fg:w="1"/><text x="25.4601%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="25.2101%" y="421" width="0.2801%" height="15" fill="rgb(235,36,10)" fg:x="90" fg:w="1"/><text x="25.4601%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.28%)</title><rect x="25.2101%" y="405" width="0.2801%" height="15" fill="rgb(251,123,47)" fg:x="90" fg:w="1"/><text x="25.4601%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.28%)</title><rect x="25.2101%" y="389" width="0.2801%" height="15" fill="rgb(221,13,13)" fg:x="90" fg:w="1"/><text x="25.4601%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.28%)</title><rect x="25.2101%" y="373" width="0.2801%" height="15" fill="rgb(238,131,9)" fg:x="90" fg:w="1"/><text x="25.4601%" y="383.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.28%)</title><rect x="25.4902%" y="549" width="0.2801%" height="15" fill="rgb(211,50,8)" fg:x="91" fg:w="1"/><text x="25.7402%" y="559.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.28%)</title><rect x="25.4902%" y="533" width="0.2801%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="1"/><text x="25.7402%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.28%)</title><rect x="25.4902%" y="517" width="0.2801%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="1"/><text x="25.7402%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.28%)</title><rect x="25.4902%" y="501" width="0.2801%" height="15" fill="rgb(246,228,12)" fg:x="91" fg:w="1"/><text x="25.7402%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.28%)</title><rect x="25.4902%" y="485" width="0.2801%" height="15" fill="rgb(213,55,15)" fg:x="91" fg:w="1"/><text x="25.7402%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.28%)</title><rect x="25.4902%" y="469" width="0.2801%" height="15" fill="rgb(209,9,3)" fg:x="91" fg:w="1"/><text x="25.7402%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.28%)</title><rect x="25.4902%" y="453" width="0.2801%" height="15" fill="rgb(230,59,30)" fg:x="91" fg:w="1"/><text x="25.7402%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="25.4902%" y="437" width="0.2801%" height="15" fill="rgb(209,121,21)" fg:x="91" fg:w="1"/><text x="25.7402%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.28%)</title><rect x="25.4902%" y="421" width="0.2801%" height="15" fill="rgb(220,109,13)" fg:x="91" fg:w="1"/><text x="25.7402%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.28%)</title><rect x="25.4902%" y="405" width="0.2801%" height="15" fill="rgb(232,18,1)" fg:x="91" fg:w="1"/><text x="25.7402%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.28%)</title><rect x="25.4902%" y="389" width="0.2801%" height="15" fill="rgb(215,41,42)" fg:x="91" fg:w="1"/><text x="25.7402%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.28%)</title><rect x="25.4902%" y="373" width="0.2801%" height="15" fill="rgb(224,123,36)" fg:x="91" fg:w="1"/><text x="25.7402%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.28%)</title><rect x="25.4902%" y="357" width="0.2801%" height="15" fill="rgb(240,125,3)" fg:x="91" fg:w="1"/><text x="25.7402%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.28%)</title><rect x="25.4902%" y="341" width="0.2801%" height="15" fill="rgb(205,98,50)" fg:x="91" fg:w="1"/><text x="25.7402%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="25.4902%" y="325" width="0.2801%" height="15" fill="rgb(205,185,37)" fg:x="91" fg:w="1"/><text x="25.7402%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (1 samples, 0.28%)</title><rect x="25.7703%" y="549" width="0.2801%" height="15" fill="rgb(238,207,15)" fg:x="92" fg:w="1"/><text x="26.0203%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="25.7703%" y="533" width="0.2801%" height="15" fill="rgb(213,199,42)" fg:x="92" fg:w="1"/><text x="26.0203%" y="543.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.28%)</title><rect x="25.7703%" y="517" width="0.2801%" height="15" fill="rgb(235,201,11)" fg:x="92" fg:w="1"/><text x="26.0203%" y="527.50"></text></g><g><title>std::thread::panicking (1 samples, 0.28%)</title><rect x="25.7703%" y="501" width="0.2801%" height="15" fill="rgb(207,46,11)" fg:x="92" fg:w="1"/><text x="26.0203%" y="511.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.28%)</title><rect x="25.7703%" y="485" width="0.2801%" height="15" fill="rgb(241,35,35)" fg:x="92" fg:w="1"/><text x="26.0203%" y="495.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.28%)</title><rect x="25.7703%" y="469" width="0.2801%" height="15" fill="rgb(243,32,47)" fg:x="92" fg:w="1"/><text x="26.0203%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt;&gt; (6 samples, 1.68%)</title><rect x="26.0504%" y="501" width="1.6807%" height="15" fill="rgb(247,202,23)" fg:x="93" fg:w="6"/><text x="26.3004%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (6 samples, 1.68%)</title><rect x="26.0504%" y="485" width="1.6807%" height="15" fill="rgb(219,102,11)" fg:x="93" fg:w="6"/><text x="26.3004%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 1.68%)</title><rect x="26.0504%" y="469" width="1.6807%" height="15" fill="rgb(243,110,44)" fg:x="93" fg:w="6"/><text x="26.3004%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 1.68%)</title><rect x="26.0504%" y="453" width="1.6807%" height="15" fill="rgb(222,74,54)" fg:x="93" fg:w="6"/><text x="26.3004%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 1.68%)</title><rect x="26.0504%" y="437" width="1.6807%" height="15" fill="rgb(216,99,12)" fg:x="93" fg:w="6"/><text x="26.3004%" y="447.50"></text></g><g><title>_int_free (6 samples, 1.68%)</title><rect x="26.0504%" y="421" width="1.6807%" height="15" fill="rgb(226,22,26)" fg:x="93" fg:w="6"/><text x="26.3004%" y="431.50"></text></g><g><title>malloc_consolidate (6 samples, 1.68%)</title><rect x="26.0504%" y="405" width="1.6807%" height="15" fill="rgb(217,163,10)" fg:x="93" fg:w="6"/><text x="26.3004%" y="415.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (7 samples, 1.96%)</title><rect x="26.0504%" y="517" width="1.9608%" height="15" fill="rgb(213,25,53)" fg:x="93" fg:w="7"/><text x="26.3004%" y="527.50">c..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.28%)</title><rect x="27.7311%" y="501" width="0.2801%" height="15" fill="rgb(252,105,26)" fg:x="99" fg:w="1"/><text x="27.9811%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.28%)</title><rect x="27.7311%" y="485" width="0.2801%" height="15" fill="rgb(220,39,43)" fg:x="99" fg:w="1"/><text x="27.9811%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.28%)</title><rect x="27.7311%" y="469" width="0.2801%" height="15" fill="rgb(229,68,48)" fg:x="99" fg:w="1"/><text x="27.9811%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.28%)</title><rect x="27.7311%" y="453" width="0.2801%" height="15" fill="rgb(252,8,32)" fg:x="99" fg:w="1"/><text x="27.9811%" y="463.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (33 samples, 9.24%)</title><rect x="26.0504%" y="549" width="9.2437%" height="15" fill="rgb(223,20,43)" fg:x="93" fg:w="33"/><text x="26.3004%" y="559.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (33 samples, 9.24%)</title><rect x="26.0504%" y="533" width="9.2437%" height="15" fill="rgb(229,81,49)" fg:x="93" fg:w="33"/><text x="26.3004%" y="543.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (26 samples, 7.28%)</title><rect x="28.0112%" y="517" width="7.2829%" height="15" fill="rgb(236,28,36)" fg:x="100" fg:w="26"/><text x="28.2612%" y="527.50">crossbeam_..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (26 samples, 7.28%)</title><rect x="28.0112%" y="501" width="7.2829%" height="15" fill="rgb(249,185,26)" fg:x="100" fg:w="26"/><text x="28.2612%" y="511.50">crossbeam_..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (26 samples, 7.28%)</title><rect x="28.0112%" y="485" width="7.2829%" height="15" fill="rgb(249,174,33)" fg:x="100" fg:w="26"/><text x="28.2612%" y="495.50">crossbeam_..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (17 samples, 4.76%)</title><rect x="30.5322%" y="469" width="4.7619%" height="15" fill="rgb(233,201,37)" fg:x="109" fg:w="17"/><text x="30.7822%" y="479.50">crossb..</text></g><g><title>__GI___sched_yield (17 samples, 4.76%)</title><rect x="30.5322%" y="453" width="4.7619%" height="15" fill="rgb(221,78,26)" fg:x="109" fg:w="17"/><text x="30.7822%" y="463.50">__GI__..</text></g><g><title>[unknown] (17 samples, 4.76%)</title><rect x="30.5322%" y="437" width="4.7619%" height="15" fill="rgb(250,127,30)" fg:x="109" fg:w="17"/><text x="30.7822%" y="447.50">[unkno..</text></g><g><title>[unknown] (16 samples, 4.48%)</title><rect x="30.8123%" y="421" width="4.4818%" height="15" fill="rgb(230,49,44)" fg:x="110" fg:w="16"/><text x="31.0623%" y="431.50">[unkn..</text></g><g><title>[unknown] (16 samples, 4.48%)</title><rect x="30.8123%" y="405" width="4.4818%" height="15" fill="rgb(229,67,23)" fg:x="110" fg:w="16"/><text x="31.0623%" y="415.50">[unkn..</text></g><g><title>[unknown] (16 samples, 4.48%)</title><rect x="30.8123%" y="389" width="4.4818%" height="15" fill="rgb(249,83,47)" fg:x="110" fg:w="16"/><text x="31.0623%" y="399.50">[unkn..</text></g><g><title>[unknown] (14 samples, 3.92%)</title><rect x="31.3725%" y="373" width="3.9216%" height="15" fill="rgb(215,43,3)" fg:x="112" fg:w="14"/><text x="31.6225%" y="383.50">[unk..</text></g><g><title>[unknown] (14 samples, 3.92%)</title><rect x="31.3725%" y="357" width="3.9216%" height="15" fill="rgb(238,154,13)" fg:x="112" fg:w="14"/><text x="31.6225%" y="367.50">[unk..</text></g><g><title>[unknown] (13 samples, 3.64%)</title><rect x="31.6527%" y="341" width="3.6415%" height="15" fill="rgb(219,56,2)" fg:x="113" fg:w="13"/><text x="31.9027%" y="351.50">[unk..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="31.9328%" y="325" width="3.3613%" height="15" fill="rgb(233,0,4)" fg:x="114" fg:w="12"/><text x="32.1828%" y="335.50">[un..</text></g><g><title>[unknown] (11 samples, 3.08%)</title><rect x="32.2129%" y="309" width="3.0812%" height="15" fill="rgb(235,30,7)" fg:x="115" fg:w="11"/><text x="32.4629%" y="319.50">[un..</text></g><g><title>[unknown] (10 samples, 2.80%)</title><rect x="32.4930%" y="293" width="2.8011%" height="15" fill="rgb(250,79,13)" fg:x="116" fg:w="10"/><text x="32.7430%" y="303.50">[u..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="33.0532%" y="277" width="2.2409%" height="15" fill="rgb(211,146,34)" fg:x="118" fg:w="8"/><text x="33.3032%" y="287.50">[..</text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="34.7339%" y="261" width="0.5602%" height="15" fill="rgb(228,22,38)" fg:x="124" fg:w="2"/><text x="34.9839%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="34.7339%" y="245" width="0.5602%" height="15" fill="rgb(235,168,5)" fg:x="124" fg:w="2"/><text x="34.9839%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="34.7339%" y="229" width="0.5602%" height="15" fill="rgb(221,155,16)" fg:x="124" fg:w="2"/><text x="34.9839%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.28%)</title><rect x="35.2941%" y="533" width="0.2801%" height="15" fill="rgb(215,215,53)" fg:x="126" fg:w="1"/><text x="35.5441%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.12%)</title><rect x="35.8543%" y="341" width="1.1204%" height="15" fill="rgb(223,4,10)" fg:x="128" fg:w="4"/><text x="36.1043%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.84%)</title><rect x="36.1345%" y="325" width="0.8403%" height="15" fill="rgb(234,103,6)" fg:x="129" fg:w="3"/><text x="36.3845%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="36.1345%" y="309" width="0.8403%" height="15" fill="rgb(227,97,0)" fg:x="129" fg:w="3"/><text x="36.3845%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="36.1345%" y="293" width="0.8403%" height="15" fill="rgb(234,150,53)" fg:x="129" fg:w="3"/><text x="36.3845%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="36.1345%" y="277" width="0.8403%" height="15" fill="rgb(228,201,54)" fg:x="129" fg:w="3"/><text x="36.3845%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.84%)</title><rect x="36.1345%" y="261" width="0.8403%" height="15" fill="rgb(222,22,37)" fg:x="129" fg:w="3"/><text x="36.3845%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (3 samples, 0.84%)</title><rect x="36.1345%" y="245" width="0.8403%" height="15" fill="rgb(237,53,32)" fg:x="129" fg:w="3"/><text x="36.3845%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.84%)</title><rect x="36.1345%" y="229" width="0.8403%" height="15" fill="rgb(233,25,53)" fg:x="129" fg:w="3"/><text x="36.3845%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (3 samples, 0.84%)</title><rect x="36.1345%" y="213" width="0.8403%" height="15" fill="rgb(210,40,34)" fg:x="129" fg:w="3"/><text x="36.3845%" y="223.50"></text></g><g><title>hex::val (1 samples, 0.28%)</title><rect x="36.6947%" y="197" width="0.2801%" height="15" fill="rgb(241,220,44)" fg:x="131" fg:w="1"/><text x="36.9447%" y="207.50"></text></g><g><title>hex::decode (6 samples, 1.68%)</title><rect x="35.5742%" y="533" width="1.6807%" height="15" fill="rgb(235,28,35)" fg:x="127" fg:w="6"/><text x="35.8242%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (6 samples, 1.68%)</title><rect x="35.5742%" y="517" width="1.6807%" height="15" fill="rgb(210,56,17)" fg:x="127" fg:w="6"/><text x="35.8242%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 1.68%)</title><rect x="35.5742%" y="501" width="1.6807%" height="15" fill="rgb(224,130,29)" fg:x="127" fg:w="6"/><text x="35.8242%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (6 samples, 1.68%)</title><rect x="35.5742%" y="485" width="1.6807%" height="15" fill="rgb(235,212,8)" fg:x="127" fg:w="6"/><text x="35.8242%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 1.68%)</title><rect x="35.5742%" y="469" width="1.6807%" height="15" fill="rgb(223,33,50)" fg:x="127" fg:w="6"/><text x="35.8242%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (6 samples, 1.68%)</title><rect x="35.5742%" y="453" width="1.6807%" height="15" fill="rgb(219,149,13)" fg:x="127" fg:w="6"/><text x="35.8242%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 1.68%)</title><rect x="35.5742%" y="437" width="1.6807%" height="15" fill="rgb(250,156,29)" fg:x="127" fg:w="6"/><text x="35.8242%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 1.68%)</title><rect x="35.5742%" y="421" width="1.6807%" height="15" fill="rgb(216,193,19)" fg:x="127" fg:w="6"/><text x="35.8242%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 1.68%)</title><rect x="35.5742%" y="405" width="1.6807%" height="15" fill="rgb(216,135,14)" fg:x="127" fg:w="6"/><text x="35.8242%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 1.68%)</title><rect x="35.5742%" y="389" width="1.6807%" height="15" fill="rgb(241,47,5)" fg:x="127" fg:w="6"/><text x="35.8242%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 1.68%)</title><rect x="35.5742%" y="373" width="1.6807%" height="15" fill="rgb(233,42,35)" fg:x="127" fg:w="6"/><text x="35.8242%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 1.68%)</title><rect x="35.5742%" y="357" width="1.6807%" height="15" fill="rgb(231,13,6)" fg:x="127" fg:w="6"/><text x="35.8242%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="36.9748%" y="341" width="0.2801%" height="15" fill="rgb(207,181,40)" fg:x="132" fg:w="1"/><text x="37.2248%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.28%)</title><rect x="36.9748%" y="325" width="0.2801%" height="15" fill="rgb(254,173,49)" fg:x="132" fg:w="1"/><text x="37.2248%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.28%)</title><rect x="36.9748%" y="309" width="0.2801%" height="15" fill="rgb(221,1,38)" fg:x="132" fg:w="1"/><text x="37.2248%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.28%)</title><rect x="36.9748%" y="293" width="0.2801%" height="15" fill="rgb(206,124,46)" fg:x="132" fg:w="1"/><text x="37.2248%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.28%)</title><rect x="36.9748%" y="277" width="0.2801%" height="15" fill="rgb(249,21,11)" fg:x="132" fg:w="1"/><text x="37.2248%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.28%)</title><rect x="36.9748%" y="261" width="0.2801%" height="15" fill="rgb(222,201,40)" fg:x="132" fg:w="1"/><text x="37.2248%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.28%)</title><rect x="36.9748%" y="245" width="0.2801%" height="15" fill="rgb(235,61,29)" fg:x="132" fg:w="1"/><text x="37.2248%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.28%)</title><rect x="36.9748%" y="229" width="0.2801%" height="15" fill="rgb(219,207,3)" fg:x="132" fg:w="1"/><text x="37.2248%" y="239.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.28%)</title><rect x="36.9748%" y="213" width="0.2801%" height="15" fill="rgb(222,56,46)" fg:x="132" fg:w="1"/><text x="37.2248%" y="223.50"></text></g><g><title>_int_realloc (1 samples, 0.28%)</title><rect x="36.9748%" y="197" width="0.2801%" height="15" fill="rgb(239,76,54)" fg:x="132" fg:w="1"/><text x="37.2248%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.28%)</title><rect x="36.9748%" y="181" width="0.2801%" height="15" fill="rgb(231,124,27)" fg:x="132" fg:w="1"/><text x="37.2248%" y="191.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.28%)</title><rect x="37.2549%" y="437" width="0.2801%" height="15" fill="rgb(249,195,6)" fg:x="133" fg:w="1"/><text x="37.5049%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.28%)</title><rect x="37.2549%" y="421" width="0.2801%" height="15" fill="rgb(237,174,47)" fg:x="133" fg:w="1"/><text x="37.5049%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.28%)</title><rect x="37.2549%" y="405" width="0.2801%" height="15" fill="rgb(206,201,31)" fg:x="133" fg:w="1"/><text x="37.5049%" y="415.50"></text></g><g><title>lab4::checksum::Checksum::update (9 samples, 2.52%)</title><rect x="35.2941%" y="549" width="2.5210%" height="15" fill="rgb(231,57,52)" fg:x="126" fg:w="9"/><text x="35.5441%" y="559.50">la..</text></g><g><title>hex::encode (2 samples, 0.56%)</title><rect x="37.2549%" y="533" width="0.5602%" height="15" fill="rgb(248,177,22)" fg:x="133" fg:w="2"/><text x="37.5049%" y="543.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (2 samples, 0.56%)</title><rect x="37.2549%" y="517" width="0.5602%" height="15" fill="rgb(215,211,37)" fg:x="133" fg:w="2"/><text x="37.5049%" y="527.50"></text></g><g><title>hex::encode_to_iter (2 samples, 0.56%)</title><rect x="37.2549%" y="501" width="0.5602%" height="15" fill="rgb(241,128,51)" fg:x="133" fg:w="2"/><text x="37.5049%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.56%)</title><rect x="37.2549%" y="485" width="0.5602%" height="15" fill="rgb(227,165,31)" fg:x="133" fg:w="2"/><text x="37.5049%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.56%)</title><rect x="37.2549%" y="469" width="0.5602%" height="15" fill="rgb(228,167,24)" fg:x="133" fg:w="2"/><text x="37.5049%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.56%)</title><rect x="37.2549%" y="453" width="0.5602%" height="15" fill="rgb(228,143,12)" fg:x="133" fg:w="2"/><text x="37.5049%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.28%)</title><rect x="37.5350%" y="437" width="0.2801%" height="15" fill="rgb(249,149,8)" fg:x="134" fg:w="1"/><text x="37.7850%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.28%)</title><rect x="37.5350%" y="421" width="0.2801%" height="15" fill="rgb(243,35,44)" fg:x="134" fg:w="1"/><text x="37.7850%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.28%)</title><rect x="37.5350%" y="405" width="0.2801%" height="15" fill="rgb(246,89,9)" fg:x="134" fg:w="1"/><text x="37.7850%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.28%)</title><rect x="37.5350%" y="389" width="0.2801%" height="15" fill="rgb(233,213,13)" fg:x="134" fg:w="1"/><text x="37.7850%" y="399.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.28%)</title><rect x="37.5350%" y="373" width="0.2801%" height="15" fill="rgb(233,141,41)" fg:x="134" fg:w="1"/><text x="37.7850%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.28%)</title><rect x="37.5350%" y="357" width="0.2801%" height="15" fill="rgb(239,167,4)" fg:x="134" fg:w="1"/><text x="37.7850%" y="367.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (1 samples, 0.28%)</title><rect x="37.8151%" y="533" width="0.2801%" height="15" fill="rgb(209,217,16)" fg:x="135" fg:w="1"/><text x="38.0651%" y="543.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.28%)</title><rect x="37.8151%" y="517" width="0.2801%" height="15" fill="rgb(219,88,35)" fg:x="135" fg:w="1"/><text x="38.0651%" y="527.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.28%)</title><rect x="37.8151%" y="501" width="0.2801%" height="15" fill="rgb(220,193,23)" fg:x="135" fg:w="1"/><text x="38.0651%" y="511.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.28%)</title><rect x="37.8151%" y="485" width="0.2801%" height="15" fill="rgb(230,90,52)" fg:x="135" fg:w="1"/><text x="38.0651%" y="495.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.28%)</title><rect x="37.8151%" y="469" width="0.2801%" height="15" fill="rgb(252,106,19)" fg:x="135" fg:w="1"/><text x="38.0651%" y="479.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.28%)</title><rect x="37.8151%" y="453" width="0.2801%" height="15" fill="rgb(206,74,20)" fg:x="135" fg:w="1"/><text x="38.0651%" y="463.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.28%)</title><rect x="37.8151%" y="437" width="0.2801%" height="15" fill="rgb(230,138,44)" fg:x="135" fg:w="1"/><text x="38.0651%" y="447.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.28%)</title><rect x="37.8151%" y="421" width="0.2801%" height="15" fill="rgb(235,182,43)" fg:x="135" fg:w="1"/><text x="38.0651%" y="431.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.28%)</title><rect x="37.8151%" y="405" width="0.2801%" height="15" fill="rgb(242,16,51)" fg:x="135" fg:w="1"/><text x="38.0651%" y="415.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (1 samples, 0.28%)</title><rect x="37.8151%" y="389" width="0.2801%" height="15" fill="rgb(248,9,4)" fg:x="135" fg:w="1"/><text x="38.0651%" y="399.50"></text></g><g><title>core::core_arch::x86::sha::_mm_sha256rnds2_epu32 (1 samples, 0.28%)</title><rect x="37.8151%" y="373" width="0.2801%" height="15" fill="rgb(210,31,22)" fg:x="135" fg:w="1"/><text x="38.0651%" y="383.50"></text></g><g><title>alloc::string::String::reserve (6 samples, 1.68%)</title><rect x="38.0952%" y="437" width="1.6807%" height="15" fill="rgb(239,54,39)" fg:x="136" fg:w="6"/><text x="38.3452%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 1.68%)</title><rect x="38.0952%" y="421" width="1.6807%" height="15" fill="rgb(230,99,41)" fg:x="136" fg:w="6"/><text x="38.3452%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 1.68%)</title><rect x="38.0952%" y="405" width="1.6807%" height="15" fill="rgb(253,106,12)" fg:x="136" fg:w="6"/><text x="38.3452%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 1.68%)</title><rect x="38.0952%" y="389" width="1.6807%" height="15" fill="rgb(213,46,41)" fg:x="136" fg:w="6"/><text x="38.3452%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 1.68%)</title><rect x="38.0952%" y="373" width="1.6807%" height="15" fill="rgb(215,133,35)" fg:x="136" fg:w="6"/><text x="38.3452%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 1.68%)</title><rect x="38.0952%" y="357" width="1.6807%" height="15" fill="rgb(213,28,5)" fg:x="136" fg:w="6"/><text x="38.3452%" y="367.50"></text></g><g><title>__GI___libc_malloc (6 samples, 1.68%)</title><rect x="38.0952%" y="341" width="1.6807%" height="15" fill="rgb(215,77,49)" fg:x="136" fg:w="6"/><text x="38.3452%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 1.68%)</title><rect x="39.7759%" y="389" width="1.6807%" height="15" fill="rgb(248,100,22)" fg:x="142" fg:w="6"/><text x="40.0259%" y="399.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (6 samples, 1.68%)</title><rect x="39.7759%" y="373" width="1.6807%" height="15" fill="rgb(208,67,9)" fg:x="142" fg:w="6"/><text x="40.0259%" y="383.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 3.36%)</title><rect x="39.7759%" y="405" width="3.3613%" height="15" fill="rgb(219,133,21)" fg:x="142" fg:w="12"/><text x="40.0259%" y="415.50">&lt;he..</text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 1.68%)</title><rect x="41.4566%" y="389" width="1.6807%" height="15" fill="rgb(246,46,29)" fg:x="148" fg:w="6"/><text x="41.7066%" y="399.50"></text></g><g><title>core::mem::replace (6 samples, 1.68%)</title><rect x="41.4566%" y="373" width="1.6807%" height="15" fill="rgb(246,185,52)" fg:x="148" fg:w="6"/><text x="41.7066%" y="383.50"></text></g><g><title>core::ptr::write (6 samples, 1.68%)</title><rect x="41.4566%" y="357" width="1.6807%" height="15" fill="rgb(252,136,11)" fg:x="148" fg:w="6"/><text x="41.7066%" y="367.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (25 samples, 7.00%)</title><rect x="37.8151%" y="549" width="7.0028%" height="15" fill="rgb(219,138,53)" fg:x="135" fg:w="25"/><text x="38.0651%" y="559.50">lab4::che..</text></g><g><title>hex::encode (24 samples, 6.72%)</title><rect x="38.0952%" y="533" width="6.7227%" height="15" fill="rgb(211,51,23)" fg:x="136" fg:w="24"/><text x="38.3452%" y="543.50">hex::enco..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (24 samples, 6.72%)</title><rect x="38.0952%" y="517" width="6.7227%" height="15" fill="rgb(247,221,28)" fg:x="136" fg:w="24"/><text x="38.3452%" y="527.50">&lt;T as hex..</text></g><g><title>hex::encode_to_iter (24 samples, 6.72%)</title><rect x="38.0952%" y="501" width="6.7227%" height="15" fill="rgb(251,222,45)" fg:x="136" fg:w="24"/><text x="38.3452%" y="511.50">hex::enco..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 6.72%)</title><rect x="38.0952%" y="485" width="6.7227%" height="15" fill="rgb(217,162,53)" fg:x="136" fg:w="24"/><text x="38.3452%" y="495.50">core::ite..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (24 samples, 6.72%)</title><rect x="38.0952%" y="469" width="6.7227%" height="15" fill="rgb(229,93,14)" fg:x="136" fg:w="24"/><text x="38.3452%" y="479.50">&lt;alloc::s..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (24 samples, 6.72%)</title><rect x="38.0952%" y="453" width="6.7227%" height="15" fill="rgb(209,67,49)" fg:x="136" fg:w="24"/><text x="38.3452%" y="463.50">&lt;alloc::s..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 5.04%)</title><rect x="39.7759%" y="437" width="5.0420%" height="15" fill="rgb(213,87,29)" fg:x="142" fg:w="18"/><text x="40.0259%" y="447.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 5.04%)</title><rect x="39.7759%" y="421" width="5.0420%" height="15" fill="rgb(205,151,52)" fg:x="142" fg:w="18"/><text x="40.0259%" y="431.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 1.68%)</title><rect x="43.1373%" y="405" width="1.6807%" height="15" fill="rgb(253,215,39)" fg:x="154" fg:w="6"/><text x="43.3873%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (6 samples, 1.68%)</title><rect x="43.1373%" y="389" width="1.6807%" height="15" fill="rgb(221,220,41)" fg:x="154" fg:w="6"/><text x="43.3873%" y="399.50"></text></g><g><title>alloc::string::String::push (6 samples, 1.68%)</title><rect x="43.1373%" y="373" width="1.6807%" height="15" fill="rgb(218,133,21)" fg:x="154" fg:w="6"/><text x="43.3873%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 1.68%)</title><rect x="43.1373%" y="357" width="1.6807%" height="15" fill="rgb(221,193,43)" fg:x="154" fg:w="6"/><text x="43.3873%" y="367.50"></text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 3.08%)</title><rect x="44.8179%" y="501" width="3.0812%" height="15" fill="rgb(240,128,52)" fg:x="160" fg:w="11"/><text x="45.0679%" y="511.50">std..</text></g><g><title>syscall (11 samples, 3.08%)</title><rect x="44.8179%" y="485" width="3.0812%" height="15" fill="rgb(253,114,12)" fg:x="160" fg:w="11"/><text x="45.0679%" y="495.50">sys..</text></g><g><title>[unknown] (11 samples, 3.08%)</title><rect x="44.8179%" y="469" width="3.0812%" height="15" fill="rgb(215,223,47)" fg:x="160" fg:w="11"/><text x="45.0679%" y="479.50">[un..</text></g><g><title>[unknown] (11 samples, 3.08%)</title><rect x="44.8179%" y="453" width="3.0812%" height="15" fill="rgb(248,225,23)" fg:x="160" fg:w="11"/><text x="45.0679%" y="463.50">[un..</text></g><g><title>[unknown] (11 samples, 3.08%)</title><rect x="44.8179%" y="437" width="3.0812%" height="15" fill="rgb(250,108,0)" fg:x="160" fg:w="11"/><text x="45.0679%" y="447.50">[un..</text></g><g><title>[unknown] (11 samples, 3.08%)</title><rect x="44.8179%" y="421" width="3.0812%" height="15" fill="rgb(228,208,7)" fg:x="160" fg:w="11"/><text x="45.0679%" y="431.50">[un..</text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="46.4986%" y="405" width="1.4006%" height="15" fill="rgb(244,45,10)" fg:x="166" fg:w="5"/><text x="46.7486%" y="415.50"></text></g><g><title>lab4::package::PackageDownloader::run (118 samples, 33.05%)</title><rect x="25.4902%" y="565" width="33.0532%" height="15" fill="rgb(207,125,25)" fg:x="91" fg:w="118"/><text x="25.7402%" y="575.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 13.73%)</title><rect x="44.8179%" y="549" width="13.7255%" height="15" fill="rgb(210,195,18)" fg:x="160" fg:w="49"/><text x="45.0679%" y="559.50">std::sync::mutex::Mut..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (49 samples, 13.73%)</title><rect x="44.8179%" y="533" width="13.7255%" height="15" fill="rgb(249,80,12)" fg:x="160" fg:w="49"/><text x="45.0679%" y="543.50">std::sys::unix::locks..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (49 samples, 13.73%)</title><rect x="44.8179%" y="517" width="13.7255%" height="15" fill="rgb(221,65,9)" fg:x="160" fg:w="49"/><text x="45.0679%" y="527.50">std::sys::unix::locks..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (38 samples, 10.64%)</title><rect x="47.8992%" y="501" width="10.6443%" height="15" fill="rgb(235,49,36)" fg:x="171" fg:w="38"/><text x="48.1492%" y="511.50">std::sys::unix::..</text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.28%)</title><rect x="58.2633%" y="485" width="0.2801%" height="15" fill="rgb(225,32,20)" fg:x="208" fg:w="1"/><text x="58.5133%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.28%)</title><rect x="58.2633%" y="469" width="0.2801%" height="15" fill="rgb(215,141,46)" fg:x="208" fg:w="1"/><text x="58.5133%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.28%)</title><rect x="58.5434%" y="533" width="0.2801%" height="15" fill="rgb(250,160,47)" fg:x="209" fg:w="1"/><text x="58.7934%" y="543.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (11 samples, 3.08%)</title><rect x="58.8235%" y="437" width="3.0812%" height="15" fill="rgb(216,222,40)" fg:x="210" fg:w="11"/><text x="59.0735%" y="447.50">cro..</text></g><g><title>std::thread::park (11 samples, 3.08%)</title><rect x="58.8235%" y="421" width="3.0812%" height="15" fill="rgb(234,217,39)" fg:x="210" fg:w="11"/><text x="59.0735%" y="431.50">std..</text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (11 samples, 3.08%)</title><rect x="58.8235%" y="405" width="3.0812%" height="15" fill="rgb(207,178,40)" fg:x="210" fg:w="11"/><text x="59.0735%" y="415.50">std..</text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 3.08%)</title><rect x="58.8235%" y="389" width="3.0812%" height="15" fill="rgb(221,136,13)" fg:x="210" fg:w="11"/><text x="59.0735%" y="399.50">std..</text></g><g><title>syscall (5 samples, 1.40%)</title><rect x="60.5042%" y="373" width="1.4006%" height="15" fill="rgb(249,199,10)" fg:x="216" fg:w="5"/><text x="60.7542%" y="383.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="60.5042%" y="357" width="1.4006%" height="15" fill="rgb(249,222,13)" fg:x="216" fg:w="5"/><text x="60.7542%" y="367.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="60.5042%" y="341" width="1.4006%" height="15" fill="rgb(244,185,38)" fg:x="216" fg:w="5"/><text x="60.7542%" y="351.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (13 samples, 3.64%)</title><rect x="61.9048%" y="437" width="3.6415%" height="15" fill="rgb(236,202,9)" fg:x="221" fg:w="13"/><text x="62.1548%" y="447.50">cros..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (13 samples, 3.64%)</title><rect x="61.9048%" y="421" width="3.6415%" height="15" fill="rgb(250,229,37)" fg:x="221" fg:w="13"/><text x="62.1548%" y="431.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (8 samples, 2.24%)</title><rect x="63.3053%" y="405" width="2.2409%" height="15" fill="rgb(206,174,23)" fg:x="226" fg:w="8"/><text x="63.5553%" y="415.50">c..</text></g><g><title>__GI___sched_yield (8 samples, 2.24%)</title><rect x="63.3053%" y="389" width="2.2409%" height="15" fill="rgb(211,33,43)" fg:x="226" fg:w="8"/><text x="63.5553%" y="399.50">_..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="63.3053%" y="373" width="2.2409%" height="15" fill="rgb(245,58,50)" fg:x="226" fg:w="8"/><text x="63.5553%" y="383.50">[..</text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="63.8655%" y="357" width="1.6807%" height="15" fill="rgb(244,68,36)" fg:x="228" fg:w="6"/><text x="64.1155%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="63.8655%" y="341" width="1.6807%" height="15" fill="rgb(232,229,15)" fg:x="228" fg:w="6"/><text x="64.1155%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="63.8655%" y="325" width="1.6807%" height="15" fill="rgb(254,30,23)" fg:x="228" fg:w="6"/><text x="64.1155%" y="335.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="63.8655%" y="309" width="1.6807%" height="15" fill="rgb(235,160,14)" fg:x="228" fg:w="6"/><text x="64.1155%" y="319.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="64.1457%" y="293" width="1.4006%" height="15" fill="rgb(212,155,44)" fg:x="229" fg:w="5"/><text x="64.3957%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="64.7059%" y="277" width="0.8403%" height="15" fill="rgb(226,2,50)" fg:x="231" fg:w="3"/><text x="64.9559%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="64.7059%" y="261" width="0.8403%" height="15" fill="rgb(234,177,6)" fg:x="231" fg:w="3"/><text x="64.9559%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="65.2661%" y="245" width="0.2801%" height="15" fill="rgb(217,24,9)" fg:x="233" fg:w="1"/><text x="65.5161%" y="255.50"></text></g><g><title>crossbeam_channel::context::Context::with (25 samples, 7.00%)</title><rect x="58.8235%" y="517" width="7.0028%" height="15" fill="rgb(220,13,46)" fg:x="210" fg:w="25"/><text x="59.0735%" y="527.50">crossbeam..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 7.00%)</title><rect x="58.8235%" y="501" width="7.0028%" height="15" fill="rgb(239,221,27)" fg:x="210" fg:w="25"/><text x="59.0735%" y="511.50">std::thre..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (25 samples, 7.00%)</title><rect x="58.8235%" y="485" width="7.0028%" height="15" fill="rgb(222,198,25)" fg:x="210" fg:w="25"/><text x="59.0735%" y="495.50">crossbeam..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (25 samples, 7.00%)</title><rect x="58.8235%" y="469" width="7.0028%" height="15" fill="rgb(211,99,13)" fg:x="210" fg:w="25"/><text x="59.0735%" y="479.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (25 samples, 7.00%)</title><rect x="58.8235%" y="453" width="7.0028%" height="15" fill="rgb(232,111,31)" fg:x="210" fg:w="25"/><text x="59.0735%" y="463.50">crossbeam..</text></g><g><title>crossbeam_channel::waker::SyncWaker::unregister (1 samples, 0.28%)</title><rect x="65.5462%" y="437" width="0.2801%" height="15" fill="rgb(245,82,37)" fg:x="234" fg:w="1"/><text x="65.7962%" y="447.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (1 samples, 0.28%)</title><rect x="65.5462%" y="421" width="0.2801%" height="15" fill="rgb(227,149,46)" fg:x="234" fg:w="1"/><text x="65.7962%" y="431.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.28%)</title><rect x="65.5462%" y="405" width="0.2801%" height="15" fill="rgb(218,36,50)" fg:x="234" fg:w="1"/><text x="65.7962%" y="415.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (6 samples, 1.68%)</title><rect x="65.8263%" y="501" width="1.6807%" height="15" fill="rgb(226,80,48)" fg:x="235" fg:w="6"/><text x="66.0763%" y="511.50"></text></g><g><title>core::mem::drop (6 samples, 1.68%)</title><rect x="65.8263%" y="485" width="1.6807%" height="15" fill="rgb(238,224,15)" fg:x="235" fg:w="6"/><text x="66.0763%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (6 samples, 1.68%)</title><rect x="65.8263%" y="469" width="1.6807%" height="15" fill="rgb(241,136,10)" fg:x="235" fg:w="6"/><text x="66.0763%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 1.68%)</title><rect x="65.8263%" y="453" width="1.6807%" height="15" fill="rgb(208,32,45)" fg:x="235" fg:w="6"/><text x="66.0763%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 1.68%)</title><rect x="65.8263%" y="437" width="1.6807%" height="15" fill="rgb(207,135,9)" fg:x="235" fg:w="6"/><text x="66.0763%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 1.68%)</title><rect x="65.8263%" y="421" width="1.6807%" height="15" fill="rgb(206,86,44)" fg:x="235" fg:w="6"/><text x="66.0763%" y="431.50"></text></g><g><title>_int_free (6 samples, 1.68%)</title><rect x="65.8263%" y="405" width="1.6807%" height="15" fill="rgb(245,177,15)" fg:x="235" fg:w="6"/><text x="66.0763%" y="415.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 1.68%)</title><rect x="65.8263%" y="389" width="1.6807%" height="15" fill="rgb(206,64,50)" fg:x="235" fg:w="6"/><text x="66.0763%" y="399.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="373" width="1.6807%" height="15" fill="rgb(234,36,40)" fg:x="235" fg:w="6"/><text x="66.0763%" y="383.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="357" width="1.6807%" height="15" fill="rgb(213,64,8)" fg:x="235" fg:w="6"/><text x="66.0763%" y="367.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="341" width="1.6807%" height="15" fill="rgb(210,75,36)" fg:x="235" fg:w="6"/><text x="66.0763%" y="351.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="325" width="1.6807%" height="15" fill="rgb(229,88,21)" fg:x="235" fg:w="6"/><text x="66.0763%" y="335.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="309" width="1.6807%" height="15" fill="rgb(252,204,47)" fg:x="235" fg:w="6"/><text x="66.0763%" y="319.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="65.8263%" y="293" width="1.6807%" height="15" fill="rgb(208,77,27)" fg:x="235" fg:w="6"/><text x="66.0763%" y="303.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (7 samples, 1.96%)</title><rect x="65.8263%" y="517" width="1.9608%" height="15" fill="rgb(221,76,26)" fg:x="235" fg:w="7"/><text x="66.0763%" y="527.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (1 samples, 0.28%)</title><rect x="67.5070%" y="501" width="0.2801%" height="15" fill="rgb(225,139,18)" fg:x="241" fg:w="1"/><text x="67.7570%" y="511.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (35 samples, 9.80%)</title><rect x="58.5434%" y="549" width="9.8039%" height="15" fill="rgb(230,137,11)" fg:x="209" fg:w="35"/><text x="58.7934%" y="559.50">crossbeam_chan..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (34 samples, 9.52%)</title><rect x="58.8235%" y="533" width="9.5238%" height="15" fill="rgb(212,28,1)" fg:x="210" fg:w="34"/><text x="59.0735%" y="543.50">crossbeam_chan..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (2 samples, 0.56%)</title><rect x="67.7871%" y="517" width="0.5602%" height="15" fill="rgb(248,164,17)" fg:x="242" fg:w="2"/><text x="68.0371%" y="527.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (2 samples, 0.56%)</title><rect x="67.7871%" y="501" width="0.5602%" height="15" fill="rgb(222,171,42)" fg:x="242" fg:w="2"/><text x="68.0371%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.56%)</title><rect x="67.7871%" y="485" width="0.5602%" height="15" fill="rgb(243,84,45)" fg:x="242" fg:w="2"/><text x="68.0371%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.56%)</title><rect x="67.7871%" y="469" width="0.5602%" height="15" fill="rgb(252,49,23)" fg:x="242" fg:w="2"/><text x="68.0371%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.56%)</title><rect x="67.7871%" y="453" width="0.5602%" height="15" fill="rgb(215,19,7)" fg:x="242" fg:w="2"/><text x="68.0371%" y="463.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.28%)</title><rect x="68.6275%" y="453" width="0.2801%" height="15" fill="rgb(238,81,41)" fg:x="245" fg:w="1"/><text x="68.8775%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="437" width="0.2801%" height="15" fill="rgb(210,199,37)" fg:x="245" fg:w="1"/><text x="68.8775%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="421" width="0.2801%" height="15" fill="rgb(244,192,49)" fg:x="245" fg:w="1"/><text x="68.8775%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="405" width="0.2801%" height="15" fill="rgb(226,211,11)" fg:x="245" fg:w="1"/><text x="68.8775%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="389" width="0.2801%" height="15" fill="rgb(236,162,54)" fg:x="245" fg:w="1"/><text x="68.8775%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="373" width="0.2801%" height="15" fill="rgb(220,229,9)" fg:x="245" fg:w="1"/><text x="68.8775%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="68.6275%" y="357" width="0.2801%" height="15" fill="rgb(250,87,22)" fg:x="245" fg:w="1"/><text x="68.8775%" y="367.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 0.84%)</title><rect x="68.3473%" y="549" width="0.8403%" height="15" fill="rgb(239,43,17)" fg:x="244" fg:w="3"/><text x="68.5973%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (2 samples, 0.56%)</title><rect x="68.6275%" y="533" width="0.5602%" height="15" fill="rgb(231,177,25)" fg:x="245" fg:w="2"/><text x="68.8775%" y="543.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (2 samples, 0.56%)</title><rect x="68.6275%" y="517" width="0.5602%" height="15" fill="rgb(219,179,1)" fg:x="245" fg:w="2"/><text x="68.8775%" y="527.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.56%)</title><rect x="68.6275%" y="501" width="0.5602%" height="15" fill="rgb(238,219,53)" fg:x="245" fg:w="2"/><text x="68.8775%" y="511.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (2 samples, 0.56%)</title><rect x="68.6275%" y="485" width="0.5602%" height="15" fill="rgb(232,167,36)" fg:x="245" fg:w="2"/><text x="68.8775%" y="495.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.56%)</title><rect x="68.6275%" y="469" width="0.5602%" height="15" fill="rgb(244,19,51)" fg:x="245" fg:w="2"/><text x="68.8775%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.28%)</title><rect x="68.9076%" y="453" width="0.2801%" height="15" fill="rgb(224,6,22)" fg:x="246" fg:w="1"/><text x="69.1576%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.28%)</title><rect x="68.9076%" y="437" width="0.2801%" height="15" fill="rgb(224,145,5)" fg:x="246" fg:w="1"/><text x="69.1576%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.28%)</title><rect x="68.9076%" y="421" width="0.2801%" height="15" fill="rgb(234,130,49)" fg:x="246" fg:w="1"/><text x="69.1576%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (2 samples, 0.56%)</title><rect x="69.4678%" y="229" width="0.5602%" height="15" fill="rgb(254,6,2)" fg:x="248" fg:w="2"/><text x="69.7178%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.56%)</title><rect x="69.4678%" y="213" width="0.5602%" height="15" fill="rgb(208,96,46)" fg:x="248" fg:w="2"/><text x="69.7178%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.56%)</title><rect x="69.4678%" y="197" width="0.5602%" height="15" fill="rgb(239,3,39)" fg:x="248" fg:w="2"/><text x="69.7178%" y="207.50"></text></g><g><title>hex::val (1 samples, 0.28%)</title><rect x="69.7479%" y="181" width="0.2801%" height="15" fill="rgb(233,210,1)" fg:x="249" fg:w="1"/><text x="69.9979%" y="191.50"></text></g><g><title>hex::decode (4 samples, 1.12%)</title><rect x="69.1877%" y="517" width="1.1204%" height="15" fill="rgb(244,137,37)" fg:x="247" fg:w="4"/><text x="69.4377%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (4 samples, 1.12%)</title><rect x="69.1877%" y="501" width="1.1204%" height="15" fill="rgb(240,136,2)" fg:x="247" fg:w="4"/><text x="69.4377%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 1.12%)</title><rect x="69.1877%" y="485" width="1.1204%" height="15" fill="rgb(239,18,37)" fg:x="247" fg:w="4"/><text x="69.4377%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4 samples, 1.12%)</title><rect x="69.1877%" y="469" width="1.1204%" height="15" fill="rgb(218,185,22)" fg:x="247" fg:w="4"/><text x="69.4377%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 1.12%)</title><rect x="69.1877%" y="453" width="1.1204%" height="15" fill="rgb(225,218,4)" fg:x="247" fg:w="4"/><text x="69.4377%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4 samples, 1.12%)</title><rect x="69.1877%" y="437" width="1.1204%" height="15" fill="rgb(230,182,32)" fg:x="247" fg:w="4"/><text x="69.4377%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 1.12%)</title><rect x="69.1877%" y="421" width="1.1204%" height="15" fill="rgb(242,56,43)" fg:x="247" fg:w="4"/><text x="69.4377%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 1.12%)</title><rect x="69.1877%" y="405" width="1.1204%" height="15" fill="rgb(233,99,24)" fg:x="247" fg:w="4"/><text x="69.4377%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 1.12%)</title><rect x="69.1877%" y="389" width="1.1204%" height="15" fill="rgb(234,209,42)" fg:x="247" fg:w="4"/><text x="69.4377%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 1.12%)</title><rect x="69.1877%" y="373" width="1.1204%" height="15" fill="rgb(227,7,12)" fg:x="247" fg:w="4"/><text x="69.4377%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 1.12%)</title><rect x="69.1877%" y="357" width="1.1204%" height="15" fill="rgb(245,203,43)" fg:x="247" fg:w="4"/><text x="69.4377%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 1.12%)</title><rect x="69.1877%" y="341" width="1.1204%" height="15" fill="rgb(238,205,33)" fg:x="247" fg:w="4"/><text x="69.4377%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.12%)</title><rect x="69.1877%" y="325" width="1.1204%" height="15" fill="rgb(231,56,7)" fg:x="247" fg:w="4"/><text x="69.4377%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.84%)</title><rect x="69.4678%" y="309" width="0.8403%" height="15" fill="rgb(244,186,29)" fg:x="248" fg:w="3"/><text x="69.7178%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="69.4678%" y="293" width="0.8403%" height="15" fill="rgb(234,111,31)" fg:x="248" fg:w="3"/><text x="69.7178%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="69.4678%" y="277" width="0.8403%" height="15" fill="rgb(241,149,10)" fg:x="248" fg:w="3"/><text x="69.7178%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.84%)</title><rect x="69.4678%" y="261" width="0.8403%" height="15" fill="rgb(249,206,44)" fg:x="248" fg:w="3"/><text x="69.7178%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.84%)</title><rect x="69.4678%" y="245" width="0.8403%" height="15" fill="rgb(251,153,30)" fg:x="248" fg:w="3"/><text x="69.7178%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.28%)</title><rect x="70.0280%" y="229" width="0.2801%" height="15" fill="rgb(239,152,38)" fg:x="250" fg:w="1"/><text x="70.2780%" y="239.50"></text></g><g><title>core::cmp::min (1 samples, 0.28%)</title><rect x="70.0280%" y="213" width="0.2801%" height="15" fill="rgb(249,139,47)" fg:x="250" fg:w="1"/><text x="70.2780%" y="223.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.28%)</title><rect x="70.0280%" y="197" width="0.2801%" height="15" fill="rgb(244,64,35)" fg:x="250" fg:w="1"/><text x="70.2780%" y="207.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.28%)</title><rect x="70.0280%" y="181" width="0.2801%" height="15" fill="rgb(216,46,15)" fg:x="250" fg:w="1"/><text x="70.2780%" y="191.50"></text></g><g><title>lab4::checksum::Checksum::update (5 samples, 1.40%)</title><rect x="69.1877%" y="533" width="1.4006%" height="15" fill="rgb(250,74,19)" fg:x="247" fg:w="5"/><text x="69.4377%" y="543.50"></text></g><g><title>hex::encode (1 samples, 0.28%)</title><rect x="70.3081%" y="517" width="0.2801%" height="15" fill="rgb(249,42,33)" fg:x="251" fg:w="1"/><text x="70.5581%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.28%)</title><rect x="70.3081%" y="501" width="0.2801%" height="15" fill="rgb(242,149,17)" fg:x="251" fg:w="1"/><text x="70.5581%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.28%)</title><rect x="70.3081%" y="485" width="0.2801%" height="15" fill="rgb(244,29,21)" fg:x="251" fg:w="1"/><text x="70.5581%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="70.3081%" y="469" width="0.2801%" height="15" fill="rgb(220,130,37)" fg:x="251" fg:w="1"/><text x="70.5581%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.28%)</title><rect x="70.3081%" y="453" width="0.2801%" height="15" fill="rgb(211,67,2)" fg:x="251" fg:w="1"/><text x="70.5581%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.28%)</title><rect x="70.3081%" y="437" width="0.2801%" height="15" fill="rgb(235,68,52)" fg:x="251" fg:w="1"/><text x="70.5581%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.28%)</title><rect x="70.3081%" y="421" width="0.2801%" height="15" fill="rgb(246,142,3)" fg:x="251" fg:w="1"/><text x="70.5581%" y="431.50"></text></g><g><title>__GI___libc_malloc (5 samples, 1.40%)</title><rect x="70.5882%" y="325" width="1.4006%" height="15" fill="rgb(241,25,7)" fg:x="252" fg:w="5"/><text x="70.8382%" y="335.50"></text></g><g><title>alloc::string::String::reserve (10 samples, 2.80%)</title><rect x="70.5882%" y="421" width="2.8011%" height="15" fill="rgb(242,119,39)" fg:x="252" fg:w="10"/><text x="70.8382%" y="431.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 2.80%)</title><rect x="70.5882%" y="405" width="2.8011%" height="15" fill="rgb(241,98,45)" fg:x="252" fg:w="10"/><text x="70.8382%" y="415.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 2.80%)</title><rect x="70.5882%" y="389" width="2.8011%" height="15" fill="rgb(254,28,30)" fg:x="252" fg:w="10"/><text x="70.8382%" y="399.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 2.80%)</title><rect x="70.5882%" y="373" width="2.8011%" height="15" fill="rgb(241,142,54)" fg:x="252" fg:w="10"/><text x="70.8382%" y="383.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 2.80%)</title><rect x="70.5882%" y="357" width="2.8011%" height="15" fill="rgb(222,85,15)" fg:x="252" fg:w="10"/><text x="70.8382%" y="367.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 2.80%)</title><rect x="70.5882%" y="341" width="2.8011%" height="15" fill="rgb(210,85,47)" fg:x="252" fg:w="10"/><text x="70.8382%" y="351.50">al..</text></g><g><title>__rust_alloc (5 samples, 1.40%)</title><rect x="71.9888%" y="325" width="1.4006%" height="15" fill="rgb(224,206,25)" fg:x="257" fg:w="5"/><text x="72.2388%" y="335.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (11 samples, 3.08%)</title><rect x="70.5882%" y="533" width="3.0812%" height="15" fill="rgb(243,201,19)" fg:x="252" fg:w="11"/><text x="70.8382%" y="543.50">lab..</text></g><g><title>hex::encode (11 samples, 3.08%)</title><rect x="70.5882%" y="517" width="3.0812%" height="15" fill="rgb(236,59,4)" fg:x="252" fg:w="11"/><text x="70.8382%" y="527.50">hex..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (11 samples, 3.08%)</title><rect x="70.5882%" y="501" width="3.0812%" height="15" fill="rgb(254,179,45)" fg:x="252" fg:w="11"/><text x="70.8382%" y="511.50">&lt;T ..</text></g><g><title>hex::encode_to_iter (11 samples, 3.08%)</title><rect x="70.5882%" y="485" width="3.0812%" height="15" fill="rgb(226,14,10)" fg:x="252" fg:w="11"/><text x="70.8382%" y="495.50">hex..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 3.08%)</title><rect x="70.5882%" y="469" width="3.0812%" height="15" fill="rgb(244,27,41)" fg:x="252" fg:w="11"/><text x="70.8382%" y="479.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (11 samples, 3.08%)</title><rect x="70.5882%" y="453" width="3.0812%" height="15" fill="rgb(235,35,32)" fg:x="252" fg:w="11"/><text x="70.8382%" y="463.50">&lt;al..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (11 samples, 3.08%)</title><rect x="70.5882%" y="437" width="3.0812%" height="15" fill="rgb(218,68,31)" fg:x="252" fg:w="11"/><text x="70.8382%" y="447.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.28%)</title><rect x="73.3894%" y="421" width="0.2801%" height="15" fill="rgb(207,120,37)" fg:x="262" fg:w="1"/><text x="73.6394%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.28%)</title><rect x="73.3894%" y="405" width="0.2801%" height="15" fill="rgb(227,98,0)" fg:x="262" fg:w="1"/><text x="73.6394%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (9 samples, 2.52%)</title><rect x="73.6695%" y="533" width="2.5210%" height="15" fill="rgb(207,7,3)" fg:x="263" fg:w="9"/><text x="73.9195%" y="543.50">st..</text></g><g><title>core::fmt::write (9 samples, 2.52%)</title><rect x="73.6695%" y="517" width="2.5210%" height="15" fill="rgb(206,98,19)" fg:x="263" fg:w="9"/><text x="73.9195%" y="527.50">co..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 2.52%)</title><rect x="73.6695%" y="501" width="2.5210%" height="15" fill="rgb(217,5,26)" fg:x="263" fg:w="9"/><text x="73.9195%" y="511.50">&lt;s..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 2.52%)</title><rect x="73.6695%" y="485" width="2.5210%" height="15" fill="rgb(235,190,38)" fg:x="263" fg:w="9"/><text x="73.9195%" y="495.50">&lt;s..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 2.52%)</title><rect x="73.6695%" y="469" width="2.5210%" height="15" fill="rgb(247,86,24)" fg:x="263" fg:w="9"/><text x="73.9195%" y="479.50">&lt;s..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (9 samples, 2.52%)</title><rect x="73.6695%" y="453" width="2.5210%" height="15" fill="rgb(205,101,16)" fg:x="263" fg:w="9"/><text x="73.9195%" y="463.50">&lt;s..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (9 samples, 2.52%)</title><rect x="73.6695%" y="437" width="2.5210%" height="15" fill="rgb(246,168,33)" fg:x="263" fg:w="9"/><text x="73.9195%" y="447.50">st..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (9 samples, 2.52%)</title><rect x="73.6695%" y="421" width="2.5210%" height="15" fill="rgb(231,114,1)" fg:x="263" fg:w="9"/><text x="73.9195%" y="431.50">&lt;s..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (9 samples, 2.52%)</title><rect x="73.6695%" y="405" width="2.5210%" height="15" fill="rgb(207,184,53)" fg:x="263" fg:w="9"/><text x="73.9195%" y="415.50">&lt;s..</text></g><g><title>std::sys::unix::fd::FileDesc::write (9 samples, 2.52%)</title><rect x="73.6695%" y="389" width="2.5210%" height="15" fill="rgb(224,95,51)" fg:x="263" fg:w="9"/><text x="73.9195%" y="399.50">st..</text></g><g><title>__libc_write (9 samples, 2.52%)</title><rect x="73.6695%" y="373" width="2.5210%" height="15" fill="rgb(212,188,45)" fg:x="263" fg:w="9"/><text x="73.9195%" y="383.50">__..</text></g><g><title>__libc_write (9 samples, 2.52%)</title><rect x="73.6695%" y="357" width="2.5210%" height="15" fill="rgb(223,154,38)" fg:x="263" fg:w="9"/><text x="73.9195%" y="367.50">__..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="341" width="2.5210%" height="15" fill="rgb(251,22,52)" fg:x="263" fg:w="9"/><text x="73.9195%" y="351.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="325" width="2.5210%" height="15" fill="rgb(229,209,22)" fg:x="263" fg:w="9"/><text x="73.9195%" y="335.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="309" width="2.5210%" height="15" fill="rgb(234,138,34)" fg:x="263" fg:w="9"/><text x="73.9195%" y="319.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="293" width="2.5210%" height="15" fill="rgb(212,95,11)" fg:x="263" fg:w="9"/><text x="73.9195%" y="303.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="277" width="2.5210%" height="15" fill="rgb(240,179,47)" fg:x="263" fg:w="9"/><text x="73.9195%" y="287.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="261" width="2.5210%" height="15" fill="rgb(240,163,11)" fg:x="263" fg:w="9"/><text x="73.9195%" y="271.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="245" width="2.5210%" height="15" fill="rgb(236,37,12)" fg:x="263" fg:w="9"/><text x="73.9195%" y="255.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="229" width="2.5210%" height="15" fill="rgb(232,164,16)" fg:x="263" fg:w="9"/><text x="73.9195%" y="239.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="213" width="2.5210%" height="15" fill="rgb(244,205,15)" fg:x="263" fg:w="9"/><text x="73.9195%" y="223.50">[u..</text></g><g><title>[unknown] (9 samples, 2.52%)</title><rect x="73.6695%" y="197" width="2.5210%" height="15" fill="rgb(223,117,47)" fg:x="263" fg:w="9"/><text x="73.9195%" y="207.50">[u..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="73.9496%" y="181" width="2.2409%" height="15" fill="rgb(244,107,35)" fg:x="264" fg:w="8"/><text x="74.1996%" y="191.50">[..</text></g><g><title>[unknown] (7 samples, 1.96%)</title><rect x="74.2297%" y="165" width="1.9608%" height="15" fill="rgb(205,140,8)" fg:x="265" fg:w="7"/><text x="74.4797%" y="175.50">[..</text></g><g><title>[unknown] (7 samples, 1.96%)</title><rect x="74.2297%" y="149" width="1.9608%" height="15" fill="rgb(228,84,46)" fg:x="265" fg:w="7"/><text x="74.4797%" y="159.50">[..</text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="133" width="0.5602%" height="15" fill="rgb(254,188,9)" fg:x="270" fg:w="2"/><text x="75.8803%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="117" width="0.5602%" height="15" fill="rgb(206,112,54)" fg:x="270" fg:w="2"/><text x="75.8803%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="101" width="0.5602%" height="15" fill="rgb(216,84,49)" fg:x="270" fg:w="2"/><text x="75.8803%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="85" width="0.5602%" height="15" fill="rgb(214,194,35)" fg:x="270" fg:w="2"/><text x="75.8803%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="69" width="0.5602%" height="15" fill="rgb(249,28,3)" fg:x="270" fg:w="2"/><text x="75.8803%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="53" width="0.5602%" height="15" fill="rgb(222,56,52)" fg:x="270" fg:w="2"/><text x="75.8803%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.56%)</title><rect x="75.6303%" y="37" width="0.5602%" height="15" fill="rgb(245,217,50)" fg:x="270" fg:w="2"/><text x="75.8803%" y="47.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (16 samples, 4.48%)</title><rect x="77.8711%" y="469" width="4.4818%" height="15" fill="rgb(213,201,24)" fg:x="278" fg:w="16"/><text x="78.1211%" y="479.50">core:..</text></g><g><title>std::sys::unix::futex::futex_wait (34 samples, 9.52%)</title><rect x="77.8711%" y="485" width="9.5238%" height="15" fill="rgb(248,116,28)" fg:x="278" fg:w="34"/><text x="78.1211%" y="495.50">std::sys::unix..</text></g><g><title>syscall (18 samples, 5.04%)</title><rect x="82.3529%" y="469" width="5.0420%" height="15" fill="rgb(219,72,43)" fg:x="294" fg:w="18"/><text x="82.6029%" y="479.50">syscall</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="453" width="5.0420%" height="15" fill="rgb(209,138,14)" fg:x="294" fg:w="18"/><text x="82.6029%" y="463.50">[unkno..</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="437" width="5.0420%" height="15" fill="rgb(222,18,33)" fg:x="294" fg:w="18"/><text x="82.6029%" y="447.50">[unkno..</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="421" width="5.0420%" height="15" fill="rgb(213,199,7)" fg:x="294" fg:w="18"/><text x="82.6029%" y="431.50">[unkno..</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="405" width="5.0420%" height="15" fill="rgb(250,110,10)" fg:x="294" fg:w="18"/><text x="82.6029%" y="415.50">[unkno..</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="389" width="5.0420%" height="15" fill="rgb(248,123,6)" fg:x="294" fg:w="18"/><text x="82.6029%" y="399.50">[unkno..</text></g><g><title>[unknown] (18 samples, 5.04%)</title><rect x="82.3529%" y="373" width="5.0420%" height="15" fill="rgb(206,91,31)" fg:x="294" fg:w="18"/><text x="82.6029%" y="383.50">[unkno..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="85.1541%" y="357" width="2.2409%" height="15" fill="rgb(211,154,13)" fg:x="304" fg:w="8"/><text x="85.4041%" y="367.50">[..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="85.1541%" y="341" width="2.2409%" height="15" fill="rgb(225,148,7)" fg:x="304" fg:w="8"/><text x="85.4041%" y="351.50">[..</text></g><g><title>[unknown] (8 samples, 2.24%)</title><rect x="85.1541%" y="325" width="2.2409%" height="15" fill="rgb(220,160,43)" fg:x="304" fg:w="8"/><text x="85.4041%" y="335.50">[..</text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="85.7143%" y="309" width="1.6807%" height="15" fill="rgb(213,52,39)" fg:x="306" fg:w="6"/><text x="85.9643%" y="319.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="85.7143%" y="293" width="1.6807%" height="15" fill="rgb(243,137,7)" fg:x="306" fg:w="6"/><text x="85.9643%" y="303.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="85.7143%" y="277" width="1.6807%" height="15" fill="rgb(230,79,13)" fg:x="306" fg:w="6"/><text x="85.9643%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="261" width="0.2801%" height="15" fill="rgb(247,105,23)" fg:x="311" fg:w="1"/><text x="87.3648%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="245" width="0.2801%" height="15" fill="rgb(223,179,41)" fg:x="311" fg:w="1"/><text x="87.3648%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="229" width="0.2801%" height="15" fill="rgb(218,9,34)" fg:x="311" fg:w="1"/><text x="87.3648%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="213" width="0.2801%" height="15" fill="rgb(222,106,8)" fg:x="311" fg:w="1"/><text x="87.3648%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="197" width="0.2801%" height="15" fill="rgb(211,220,0)" fg:x="311" fg:w="1"/><text x="87.3648%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="181" width="0.2801%" height="15" fill="rgb(229,52,16)" fg:x="311" fg:w="1"/><text x="87.3648%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="165" width="0.2801%" height="15" fill="rgb(212,155,18)" fg:x="311" fg:w="1"/><text x="87.3648%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="149" width="0.2801%" height="15" fill="rgb(242,21,14)" fg:x="311" fg:w="1"/><text x="87.3648%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="87.1148%" y="133" width="0.2801%" height="15" fill="rgb(222,19,48)" fg:x="311" fg:w="1"/><text x="87.3648%" y="143.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (240 samples, 67.23%)</title><rect x="23.5294%" y="741" width="67.2269%" height="15" fill="rgb(232,45,27)" fg:x="84" fg:w="240"/><text x="23.7794%" y="751.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (240 samples, 67.23%)</title><rect x="23.5294%" y="725" width="67.2269%" height="15" fill="rgb(249,103,42)" fg:x="84" fg:w="240"/><text x="23.7794%" y="735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (240 samples, 67.23%)</title><rect x="23.5294%" y="709" width="67.2269%" height="15" fill="rgb(246,81,33)" fg:x="84" fg:w="240"/><text x="23.7794%" y="719.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (240 samples, 67.23%)</title><rect x="23.5294%" y="693" width="67.2269%" height="15" fill="rgb(252,33,42)" fg:x="84" fg:w="240"/><text x="23.7794%" y="703.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (240 samples, 67.23%)</title><rect x="23.5294%" y="677" width="67.2269%" height="15" fill="rgb(209,212,41)" fg:x="84" fg:w="240"/><text x="23.7794%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (240 samples, 67.23%)</title><rect x="23.5294%" y="661" width="67.2269%" height="15" fill="rgb(207,154,6)" fg:x="84" fg:w="240"/><text x="23.7794%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (240 samples, 67.23%)</title><rect x="23.5294%" y="645" width="67.2269%" height="15" fill="rgb(223,64,47)" fg:x="84" fg:w="240"/><text x="23.7794%" y="655.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (240 samples, 67.23%)</title><rect x="23.5294%" y="629" width="67.2269%" height="15" fill="rgb(211,161,38)" fg:x="84" fg:w="240"/><text x="23.7794%" y="639.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (240 samples, 67.23%)</title><rect x="23.5294%" y="613" width="67.2269%" height="15" fill="rgb(219,138,40)" fg:x="84" fg:w="240"/><text x="23.7794%" y="623.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (240 samples, 67.23%)</title><rect x="23.5294%" y="597" width="67.2269%" height="15" fill="rgb(241,228,46)" fg:x="84" fg:w="240"/><text x="23.7794%" y="607.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (240 samples, 67.23%)</title><rect x="23.5294%" y="581" width="67.2269%" height="15" fill="rgb(223,209,38)" fg:x="84" fg:w="240"/><text x="23.7794%" y="591.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (115 samples, 32.21%)</title><rect x="58.5434%" y="565" width="32.2129%" height="15" fill="rgb(236,164,45)" fg:x="209" fg:w="115"/><text x="58.7934%" y="575.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (77 samples, 21.57%)</title><rect x="69.1877%" y="549" width="21.5686%" height="15" fill="rgb(231,15,5)" fg:x="247" fg:w="77"/><text x="69.4377%" y="559.50">lab4::student::Student::build_idea</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 14.57%)</title><rect x="76.1905%" y="533" width="14.5658%" height="15" fill="rgb(252,35,15)" fg:x="272" fg:w="52"/><text x="76.4405%" y="543.50">std::sync::mutex::Mute..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (46 samples, 12.89%)</title><rect x="77.8711%" y="517" width="12.8852%" height="15" fill="rgb(248,181,18)" fg:x="278" fg:w="46"/><text x="78.1211%" y="527.50">std::sys::unix::loc..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (46 samples, 12.89%)</title><rect x="77.8711%" y="501" width="12.8852%" height="15" fill="rgb(233,39,42)" fg:x="278" fg:w="46"/><text x="78.1211%" y="511.50">std::sys::unix::loc..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (12 samples, 3.36%)</title><rect x="87.3950%" y="485" width="3.3613%" height="15" fill="rgb(238,110,33)" fg:x="312" fg:w="12"/><text x="87.6450%" y="495.50">std..</text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.56%)</title><rect x="90.1961%" y="469" width="0.5602%" height="15" fill="rgb(233,195,10)" fg:x="322" fg:w="2"/><text x="90.4461%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.56%)</title><rect x="90.1961%" y="453" width="0.5602%" height="15" fill="rgb(254,105,3)" fg:x="322" fg:w="2"/><text x="90.4461%" y="463.50"></text></g><g><title>__sigaltstack (3 samples, 0.84%)</title><rect x="91.0364%" y="709" width="0.8403%" height="15" fill="rgb(221,225,9)" fg:x="325" fg:w="3"/><text x="91.2864%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="91.0364%" y="693" width="0.8403%" height="15" fill="rgb(224,227,45)" fg:x="325" fg:w="3"/><text x="91.2864%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="91.5966%" y="677" width="0.2801%" height="15" fill="rgb(229,198,43)" fg:x="327" fg:w="1"/><text x="91.8466%" y="687.50"></text></g><g><title>__GI___clone (330 samples, 92.44%)</title><rect x="0.5602%" y="789" width="92.4370%" height="15" fill="rgb(206,209,35)" fg:x="2" fg:w="330"/><text x="0.8102%" y="799.50">__GI___clone</text></g><g><title>start_thread (265 samples, 74.23%)</title><rect x="18.7675%" y="773" width="74.2297%" height="15" fill="rgb(245,195,53)" fg:x="67" fg:w="265"/><text x="19.0175%" y="783.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (248 samples, 69.47%)</title><rect x="23.5294%" y="757" width="69.4678%" height="15" fill="rgb(240,92,26)" fg:x="84" fg:w="248"/><text x="23.7794%" y="767.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 2.24%)</title><rect x="90.7563%" y="741" width="2.2409%" height="15" fill="rgb(207,40,23)" fg:x="324" fg:w="8"/><text x="91.0063%" y="751.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 2.24%)</title><rect x="90.7563%" y="725" width="2.2409%" height="15" fill="rgb(223,111,35)" fg:x="324" fg:w="8"/><text x="91.0063%" y="735.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (4 samples, 1.12%)</title><rect x="91.8768%" y="709" width="1.1204%" height="15" fill="rgb(229,147,28)" fg:x="328" fg:w="4"/><text x="92.1268%" y="719.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (4 samples, 1.12%)</title><rect x="91.8768%" y="693" width="1.1204%" height="15" fill="rgb(211,29,28)" fg:x="328" fg:w="4"/><text x="92.1268%" y="703.50"></text></g><g><title>__GI___mmap64 (4 samples, 1.12%)</title><rect x="91.8768%" y="677" width="1.1204%" height="15" fill="rgb(228,72,33)" fg:x="328" fg:w="4"/><text x="92.1268%" y="687.50"></text></g><g><title>[unknown] (4 samples, 1.12%)</title><rect x="91.8768%" y="661" width="1.1204%" height="15" fill="rgb(205,214,31)" fg:x="328" fg:w="4"/><text x="92.1268%" y="671.50"></text></g><g><title>[unknown] (4 samples, 1.12%)</title><rect x="91.8768%" y="645" width="1.1204%" height="15" fill="rgb(224,111,15)" fg:x="328" fg:w="4"/><text x="92.1268%" y="655.50"></text></g><g><title>[unknown] (4 samples, 1.12%)</title><rect x="91.8768%" y="629" width="1.1204%" height="15" fill="rgb(253,21,26)" fg:x="328" fg:w="4"/><text x="92.1268%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="613" width="0.8403%" height="15" fill="rgb(245,139,43)" fg:x="329" fg:w="3"/><text x="92.4069%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="597" width="0.8403%" height="15" fill="rgb(252,170,7)" fg:x="329" fg:w="3"/><text x="92.4069%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="581" width="0.8403%" height="15" fill="rgb(231,118,14)" fg:x="329" fg:w="3"/><text x="92.4069%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="565" width="0.8403%" height="15" fill="rgb(238,83,0)" fg:x="329" fg:w="3"/><text x="92.4069%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="549" width="0.8403%" height="15" fill="rgb(221,39,39)" fg:x="329" fg:w="3"/><text x="92.4069%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="533" width="0.8403%" height="15" fill="rgb(222,119,46)" fg:x="329" fg:w="3"/><text x="92.4069%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.84%)</title><rect x="92.1569%" y="517" width="0.8403%" height="15" fill="rgb(222,165,49)" fg:x="329" fg:w="3"/><text x="92.4069%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="501" width="0.2801%" height="15" fill="rgb(219,113,52)" fg:x="331" fg:w="1"/><text x="92.9671%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="485" width="0.2801%" height="15" fill="rgb(214,7,15)" fg:x="331" fg:w="1"/><text x="92.9671%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="469" width="0.2801%" height="15" fill="rgb(235,32,4)" fg:x="331" fg:w="1"/><text x="92.9671%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="453" width="0.2801%" height="15" fill="rgb(238,90,54)" fg:x="331" fg:w="1"/><text x="92.9671%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="437" width="0.2801%" height="15" fill="rgb(213,208,19)" fg:x="331" fg:w="1"/><text x="92.9671%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="421" width="0.2801%" height="15" fill="rgb(233,156,4)" fg:x="331" fg:w="1"/><text x="92.9671%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="405" width="0.2801%" height="15" fill="rgb(207,194,5)" fg:x="331" fg:w="1"/><text x="92.9671%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="389" width="0.2801%" height="15" fill="rgb(206,111,30)" fg:x="331" fg:w="1"/><text x="92.9671%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="373" width="0.2801%" height="15" fill="rgb(243,70,54)" fg:x="331" fg:w="1"/><text x="92.9671%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="357" width="0.2801%" height="15" fill="rgb(242,28,8)" fg:x="331" fg:w="1"/><text x="92.9671%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="341" width="0.2801%" height="15" fill="rgb(219,106,18)" fg:x="331" fg:w="1"/><text x="92.9671%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="325" width="0.2801%" height="15" fill="rgb(244,222,10)" fg:x="331" fg:w="1"/><text x="92.9671%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="309" width="0.2801%" height="15" fill="rgb(236,179,52)" fg:x="331" fg:w="1"/><text x="92.9671%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="293" width="0.2801%" height="15" fill="rgb(213,23,39)" fg:x="331" fg:w="1"/><text x="92.9671%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.28%)</title><rect x="92.7171%" y="277" width="0.2801%" height="15" fill="rgb(238,48,10)" fg:x="331" fg:w="1"/><text x="92.9671%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (1 samples, 0.28%)</title><rect x="92.9972%" y="421" width="0.2801%" height="15" fill="rgb(251,196,23)" fg:x="332" fg:w="1"/><text x="93.2472%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (1 samples, 0.28%)</title><rect x="92.9972%" y="405" width="0.2801%" height="15" fill="rgb(250,152,24)" fg:x="332" fg:w="1"/><text x="93.2472%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (1 samples, 0.28%)</title><rect x="92.9972%" y="389" width="0.2801%" height="15" fill="rgb(209,150,17)" fg:x="332" fg:w="1"/><text x="93.2472%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.28%)</title><rect x="92.9972%" y="373" width="0.2801%" height="15" fill="rgb(234,202,34)" fg:x="332" fg:w="1"/><text x="93.2472%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.28%)</title><rect x="92.9972%" y="357" width="0.2801%" height="15" fill="rgb(253,148,53)" fg:x="332" fg:w="1"/><text x="93.2472%" y="367.50"></text></g><g><title>__libc_start_main (18 samples, 5.04%)</title><rect x="92.9972%" y="773" width="5.0420%" height="15" fill="rgb(218,129,16)" fg:x="332" fg:w="18"/><text x="93.2472%" y="783.50">__libc..</text></g><g><title>main (18 samples, 5.04%)</title><rect x="92.9972%" y="757" width="5.0420%" height="15" fill="rgb(216,85,19)" fg:x="332" fg:w="18"/><text x="93.2472%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (18 samples, 5.04%)</title><rect x="92.9972%" y="741" width="5.0420%" height="15" fill="rgb(235,228,7)" fg:x="332" fg:w="18"/><text x="93.2472%" y="751.50">std::r..</text></g><g><title>std::panic::catch_unwind (18 samples, 5.04%)</title><rect x="92.9972%" y="725" width="5.0420%" height="15" fill="rgb(245,175,0)" fg:x="332" fg:w="18"/><text x="93.2472%" y="735.50">std::p..</text></g><g><title>std::panicking::try (18 samples, 5.04%)</title><rect x="92.9972%" y="709" width="5.0420%" height="15" fill="rgb(208,168,36)" fg:x="332" fg:w="18"/><text x="93.2472%" y="719.50">std::p..</text></g><g><title>std::panicking::try::do_call (18 samples, 5.04%)</title><rect x="92.9972%" y="693" width="5.0420%" height="15" fill="rgb(246,171,24)" fg:x="332" fg:w="18"/><text x="93.2472%" y="703.50">std::p..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (18 samples, 5.04%)</title><rect x="92.9972%" y="677" width="5.0420%" height="15" fill="rgb(215,142,24)" fg:x="332" fg:w="18"/><text x="93.2472%" y="687.50">std::r..</text></g><g><title>std::panic::catch_unwind (18 samples, 5.04%)</title><rect x="92.9972%" y="661" width="5.0420%" height="15" fill="rgb(250,187,7)" fg:x="332" fg:w="18"/><text x="93.2472%" y="671.50">std::p..</text></g><g><title>std::panicking::try (18 samples, 5.04%)</title><rect x="92.9972%" y="645" width="5.0420%" height="15" fill="rgb(228,66,33)" fg:x="332" fg:w="18"/><text x="93.2472%" y="655.50">std::p..</text></g><g><title>std::panicking::try::do_call (18 samples, 5.04%)</title><rect x="92.9972%" y="629" width="5.0420%" height="15" fill="rgb(234,215,21)" fg:x="332" fg:w="18"/><text x="93.2472%" y="639.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 5.04%)</title><rect x="92.9972%" y="613" width="5.0420%" height="15" fill="rgb(222,191,20)" fg:x="332" fg:w="18"/><text x="93.2472%" y="623.50">core::..</text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 5.04%)</title><rect x="92.9972%" y="597" width="5.0420%" height="15" fill="rgb(245,79,54)" fg:x="332" fg:w="18"/><text x="93.2472%" y="607.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 5.04%)</title><rect x="92.9972%" y="581" width="5.0420%" height="15" fill="rgb(240,10,37)" fg:x="332" fg:w="18"/><text x="93.2472%" y="591.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 5.04%)</title><rect x="92.9972%" y="565" width="5.0420%" height="15" fill="rgb(214,192,32)" fg:x="332" fg:w="18"/><text x="93.2472%" y="575.50">core::..</text></g><g><title>lab4::main (18 samples, 5.04%)</title><rect x="92.9972%" y="549" width="5.0420%" height="15" fill="rgb(209,36,54)" fg:x="332" fg:w="18"/><text x="93.2472%" y="559.50">lab4::..</text></g><g><title>lab4::hackathon (18 samples, 5.04%)</title><rect x="92.9972%" y="533" width="5.0420%" height="15" fill="rgb(220,10,11)" fg:x="332" fg:w="18"/><text x="93.2472%" y="543.50">lab4::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 5.04%)</title><rect x="92.9972%" y="517" width="5.0420%" height="15" fill="rgb(221,106,17)" fg:x="332" fg:w="18"/><text x="93.2472%" y="527.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 5.04%)</title><rect x="92.9972%" y="501" width="5.0420%" height="15" fill="rgb(251,142,44)" fg:x="332" fg:w="18"/><text x="93.2472%" y="511.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 5.04%)</title><rect x="92.9972%" y="485" width="5.0420%" height="15" fill="rgb(238,13,15)" fg:x="332" fg:w="18"/><text x="93.2472%" y="495.50">core::..</text></g><g><title>lab4::hackathon::{{closure}} (18 samples, 5.04%)</title><rect x="92.9972%" y="469" width="5.0420%" height="15" fill="rgb(208,107,27)" fg:x="332" fg:w="18"/><text x="93.2472%" y="479.50">lab4::..</text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (18 samples, 5.04%)</title><rect x="92.9972%" y="453" width="5.0420%" height="15" fill="rgb(205,136,37)" fg:x="332" fg:w="18"/><text x="93.2472%" y="463.50">std::t..</text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (18 samples, 5.04%)</title><rect x="92.9972%" y="437" width="5.0420%" height="15" fill="rgb(250,205,27)" fg:x="332" fg:w="18"/><text x="93.2472%" y="447.50">std::t..</text></g><g><title>std::sys::unix::thread::Thread::join (17 samples, 4.76%)</title><rect x="93.2773%" y="421" width="4.7619%" height="15" fill="rgb(210,80,43)" fg:x="333" fg:w="17"/><text x="93.5273%" y="431.50">std::s..</text></g><g><title>__pthread_clockjoin_ex (17 samples, 4.76%)</title><rect x="93.2773%" y="405" width="4.7619%" height="15" fill="rgb(247,160,36)" fg:x="333" fg:w="17"/><text x="93.5273%" y="415.50">__pthr..</text></g><g><title>[unknown] (17 samples, 4.76%)</title><rect x="93.2773%" y="389" width="4.7619%" height="15" fill="rgb(234,13,49)" fg:x="333" fg:w="17"/><text x="93.5273%" y="399.50">[unkno..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="94.6779%" y="373" width="3.3613%" height="15" fill="rgb(234,122,0)" fg:x="338" fg:w="12"/><text x="94.9279%" y="383.50">[un..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="94.6779%" y="357" width="3.3613%" height="15" fill="rgb(207,146,38)" fg:x="338" fg:w="12"/><text x="94.9279%" y="367.50">[un..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="94.6779%" y="341" width="3.3613%" height="15" fill="rgb(207,177,25)" fg:x="338" fg:w="12"/><text x="94.9279%" y="351.50">[un..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="94.6779%" y="325" width="3.3613%" height="15" fill="rgb(211,178,42)" fg:x="338" fg:w="12"/><text x="94.9279%" y="335.50">[un..</text></g><g><title>[unknown] (12 samples, 3.36%)</title><rect x="94.6779%" y="309" width="3.3613%" height="15" fill="rgb(230,69,54)" fg:x="338" fg:w="12"/><text x="94.9279%" y="319.50">[un..</text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="96.3585%" y="293" width="1.6807%" height="15" fill="rgb(214,135,41)" fg:x="344" fg:w="6"/><text x="96.6085%" y="303.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="96.3585%" y="277" width="1.6807%" height="15" fill="rgb(237,67,25)" fg:x="344" fg:w="6"/><text x="96.6085%" y="287.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="96.3585%" y="261" width="1.6807%" height="15" fill="rgb(222,189,50)" fg:x="344" fg:w="6"/><text x="96.6085%" y="271.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="96.3585%" y="245" width="1.6807%" height="15" fill="rgb(245,148,34)" fg:x="344" fg:w="6"/><text x="96.6085%" y="255.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="96.6387%" y="229" width="1.4006%" height="15" fill="rgb(222,29,6)" fg:x="345" fg:w="5"/><text x="96.8887%" y="239.50"></text></g><g><title>[unknown] (5 samples, 1.40%)</title><rect x="96.6387%" y="213" width="1.4006%" height="15" fill="rgb(221,189,43)" fg:x="345" fg:w="5"/><text x="96.8887%" y="223.50"></text></g><g><title>lab4 (351 samples, 98.32%)</title><rect x="0.0000%" y="805" width="98.3193%" height="15" fill="rgb(207,36,27)" fg:x="0" fg:w="351"/><text x="0.2500%" y="815.50">lab4</text></g><g><title>_start (19 samples, 5.32%)</title><rect x="92.9972%" y="789" width="5.3221%" height="15" fill="rgb(217,90,24)" fg:x="332" fg:w="19"/><text x="93.2472%" y="799.50">_start</text></g><g><title>_dl_start (1 samples, 0.28%)</title><rect x="98.0392%" y="773" width="0.2801%" height="15" fill="rgb(224,66,35)" fg:x="350" fg:w="1"/><text x="98.2892%" y="783.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.28%)</title><rect x="98.0392%" y="757" width="0.2801%" height="15" fill="rgb(221,13,50)" fg:x="350" fg:w="1"/><text x="98.2892%" y="767.50"></text></g><g><title>dl_main (1 samples, 0.28%)</title><rect x="98.0392%" y="741" width="0.2801%" height="15" fill="rgb(236,68,49)" fg:x="350" fg:w="1"/><text x="98.2892%" y="751.50"></text></g><g><title>_dl_discover_osversion (1 samples, 0.28%)</title><rect x="98.0392%" y="725" width="0.2801%" height="15" fill="rgb(229,146,28)" fg:x="350" fg:w="1"/><text x="98.2892%" y="735.50"></text></g><g><title>all (357 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(225,31,38)" fg:x="0" fg:w="357"/><text x="0.2500%" y="831.50"></text></g><g><title>perf-exec (6 samples, 1.68%)</title><rect x="98.3193%" y="805" width="1.6807%" height="15" fill="rgb(250,208,3)" fg:x="351" fg:w="6"/><text x="98.5693%" y="815.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="789" width="1.6807%" height="15" fill="rgb(246,54,23)" fg:x="351" fg:w="6"/><text x="98.5693%" y="799.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="773" width="1.6807%" height="15" fill="rgb(243,76,11)" fg:x="351" fg:w="6"/><text x="98.5693%" y="783.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="757" width="1.6807%" height="15" fill="rgb(245,21,50)" fg:x="351" fg:w="6"/><text x="98.5693%" y="767.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="741" width="1.6807%" height="15" fill="rgb(228,9,43)" fg:x="351" fg:w="6"/><text x="98.5693%" y="751.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="725" width="1.6807%" height="15" fill="rgb(208,100,47)" fg:x="351" fg:w="6"/><text x="98.5693%" y="735.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="709" width="1.6807%" height="15" fill="rgb(232,26,8)" fg:x="351" fg:w="6"/><text x="98.5693%" y="719.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="693" width="1.6807%" height="15" fill="rgb(216,166,38)" fg:x="351" fg:w="6"/><text x="98.5693%" y="703.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="677" width="1.6807%" height="15" fill="rgb(251,202,51)" fg:x="351" fg:w="6"/><text x="98.5693%" y="687.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="661" width="1.6807%" height="15" fill="rgb(254,216,34)" fg:x="351" fg:w="6"/><text x="98.5693%" y="671.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="645" width="1.6807%" height="15" fill="rgb(251,32,27)" fg:x="351" fg:w="6"/><text x="98.5693%" y="655.50"></text></g><g><title>[unknown] (6 samples, 1.68%)</title><rect x="98.3193%" y="629" width="1.6807%" height="15" fill="rgb(208,127,28)" fg:x="351" fg:w="6"/><text x="98.5693%" y="639.50"></text></g></svg></svg>